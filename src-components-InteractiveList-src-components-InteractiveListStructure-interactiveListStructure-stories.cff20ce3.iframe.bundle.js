"use strict";(self.webpackChunknimbus_patterns=self.webpackChunknimbus_patterns||[]).push([[7914],{"./packages/react/src/components/InteractiveList/src/components/InteractiveListStructure/interactiveListStructure.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _nimbus_ds_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@nimbus-ds/components/dist/index.js"),_InteractiveList__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/react/src/components/InteractiveList/src/InteractiveList.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Patterns/InteractiveList/InteractiveList.Structure",component:_InteractiveList__WEBPACK_IMPORTED_MODULE_2__.Q.Structure,argTypes:{children:{control:{disable:!0}}},tags:["autodocs"],render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_InteractiveList__WEBPACK_IMPORTED_MODULE_2__.Q,{bottomDivider:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_InteractiveList__WEBPACK_IMPORTED_MODULE_2__.Q.Structure,{...args})})},basic={args:{title:"First element",description:"Description of the first element",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_nimbus_ds_components__WEBPACK_IMPORTED_MODULE_3__.Box,{display:"flex",gap:"1",mt:"2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_nimbus_ds_components__WEBPACK_IMPORTED_MODULE_3__.Tag,{children:"Text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_nimbus_ds_components__WEBPACK_IMPORTED_MODULE_3__.Tag,{children:"Text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_nimbus_ds_components__WEBPACK_IMPORTED_MODULE_3__.Tag,{children:"Text"})]})}};basic.parameters={...basic.parameters,docs:{...basic.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "First element",\n    description: "Description of the first element",\n    children: <Box display="flex" gap="1" mt="2">\n        <Tag>Text</Tag>\n        <Tag>Text</Tag>\n        <Tag>Text</Tag>\n      </Box>\n  }\n}',...basic.parameters?.docs?.source}}};const __namedExportsOrder=["basic"]},"./packages/react/src/components/DataList/src/DataList.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>DataList});__webpack_require__("./node_modules/react/index.js");var dist=__webpack_require__("./node_modules/@nimbus-ds/components/dist/index.js");const rowPadding={base:"4",small:"2",none:"none"};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const DataListRow=({className:_className,style:_style,children,padding="base",topDivider=!0,...rest})=>(0,jsx_runtime.jsx)(dist.Box,{role:"listitem",borderStyle:"solid",borderWidth:"none",borderTopWidth:topDivider?"1":"none",borderColor:"neutral-surfaceHighlight",display:"flex",flexDirection:"column",padding:rowPadding[padding],...rest,children});DataListRow.displayName="DataListRow";try{DataListRow.displayName="DataListRow",DataListRow.__docgenInfo={description:"",displayName:"DataListRow",props:{padding:{defaultValue:{value:"base"},description:"Optional padding for the row.",name:"padding",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"none"'},{value:'"base"'}]}},children:{defaultValue:null,description:"Content of the row.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},topDivider:{defaultValue:{value:"true"},description:"Determines if the row has a top border.",name:"topDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/DataList/src/components/DataListRow/DataListRow.tsx#DataListRow"]={docgenInfo:DataListRow.__docgenInfo,name:"DataListRow",path:"packages/react/src/components/DataList/src/components/DataListRow/DataListRow.tsx#DataListRow"})}catch(__react_docgen_typescript_loader_error){}const DataList=({className:_className,style:_style,children,bottomDivider=!0,...rest})=>(0,jsx_runtime.jsx)(dist.Box,{role:"list",borderStyle:"solid",borderWidth:"none",borderBottomWidth:bottomDivider?"1":"none",borderColor:"neutral-surfaceHighlight",backgroundColor:"neutral-background",display:"flex",flexDirection:"column",width:"100%",...rest,children});DataList.displayName="DataList",DataList.Row=DataListRow,DataList.displayName="DataList",DataListRow.displayName="DataList.Row",DataList.Row.displayName="DataList.Row";try{DataList.displayName="DataList",DataList.__docgenInfo={description:"",displayName:"DataList",props:{children:{defaultValue:null,description:"Content of the List component.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},bottomDivider:{defaultValue:{value:"true"},description:"Defines whether the List has a bottom border.",name:"bottomDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/DataList/src/DataList.tsx#DataList"]={docgenInfo:DataList.__docgenInfo,name:"DataList",path:"packages/react/src/components/DataList/src/DataList.tsx#DataList"})}catch(__react_docgen_typescript_loader_error){}},"./packages/react/src/components/InteractiveList/src/InteractiveList.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>InteractiveList});__webpack_require__("./node_modules/react/index.js");var DataList=__webpack_require__("./packages/react/src/components/DataList/src/DataList.tsx"),dist=__webpack_require__("./node_modules/@nimbus-ds/components/dist/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const InteractiveListStructure=({className:_className,style:_style,title,showTitle=!0,description,children,...rest})=>(0,jsx_runtime.jsxs)(dist.Box,{className:_className,style:_style,display:"flex",flexDirection:"column",gap:"1",width:"100%",flex:"1 1 auto",...rest,children:[showTitle&&(0,jsx_runtime.jsx)(dist.Text,{color:"neutral-textHigh",children:title}),description&&(0,jsx_runtime.jsx)(dist.Text,{fontSize:"caption",color:"neutral-textLow",children:description}),children]});InteractiveListStructure.displayName="InteractiveListStructure";try{InteractiveListStructure.displayName="InteractiveListStructure",InteractiveListStructure.__docgenInfo={description:"",displayName:"InteractiveListStructure",props:{title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:{value:"true"},description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListStructure/InteractiveListStructure.tsx#InteractiveListStructure"]={docgenInfo:InteractiveListStructure.__docgenInfo,name:"InteractiveListStructure",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListStructure/InteractiveListStructure.tsx#InteractiveListStructure"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListStructureSkeleton=({className:_className,style:_style,title,showTitle=!0,description,children,...rest})=>(0,jsx_runtime.jsxs)(dist.Box,{className:_className,style:_style,display:"flex",flexDirection:"column",gap:"1",width:"100%",flex:"1 1 auto",...rest,children:[showTitle&&(0,jsx_runtime.jsx)(dist.Skeleton,{width:"3rem",height:"1.25rem",borderRadius:"0.25rem"}),description&&(0,jsx_runtime.jsx)(dist.Skeleton,{width:"15rem",height:"1.25rem",borderRadius:"0.25rem"}),children]});InteractiveListStructureSkeleton.displayName="InteractiveListStructureSkeleton";try{InteractiveListStructureSkeleton.displayName="InteractiveListStructureSkeleton",InteractiveListStructureSkeleton.__docgenInfo={description:"",displayName:"InteractiveListStructureSkeleton",props:{title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:{value:"true"},description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListStructureSkeleton/InteractiveListStructureSkeleton.tsx#InteractiveListStructureSkeleton"]={docgenInfo:InteractiveListStructureSkeleton.__docgenInfo,name:"InteractiveListStructureSkeleton",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListStructureSkeleton/InteractiveListStructureSkeleton.tsx#InteractiveListStructureSkeleton"})}catch(__react_docgen_typescript_loader_error){}var icons_dist=__webpack_require__("./node_modules/@nimbus-ds/icons/dist/index.js");const InteractiveListRow=({className:_className,style:_style,children,topDivider=!0,...rest})=>(0,jsx_runtime.jsx)(DataList.F.Row,{flexDirection:"row",gap:"2",cursor:"pointer",alignItems:"flex-start",backgroundColor:{hover:"neutral-surface"},transitionDuration:"fast",transitionProperty:"background-color",transitionTimingFunction:"ease-in-out",boxShadow:{focusWithin:"focusRing"},borderWidth:"none",borderTopWidth:topDivider?"1":"none",...rest,children});InteractiveListRow.displayName="InteractiveListRow";try{InteractiveListRow.displayName="InteractiveListRow",InteractiveListRow.__docgenInfo={description:"",displayName:"InteractiveListRow",props:{children:{defaultValue:null,description:"Content of the row.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},topDivider:{defaultValue:{value:"true"},description:"Determines if the row has a top border.",name:"topDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListRow/InteractiveListRow.tsx#InteractiveListRow"]={docgenInfo:InteractiveListRow.__docgenInfo,name:"InteractiveListRow",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListRow/InteractiveListRow.tsx#InteractiveListRow"})}catch(__react_docgen_typescript_loader_error){}const generateID=name=>`${name.toLowerCase().replace(/ /g,"-")}_${Math.floor(Math.random()*Date.now()+1)}`,InteractiveListButtonItem=({className:_className,style:_style,iconButton,...rest})=>{const itemID=generateID(rest.title);return(0,jsx_runtime.jsxs)(InteractiveListRow,{alignItems:"center",role:"menuitem",as:"label",htmlFor:itemID,topDivider:rest.topDivider,children:[(0,jsx_runtime.jsx)(InteractiveListStructure,{...rest}),(0,jsx_runtime.jsx)(dist.IconButton,{id:itemID,"aria-label":rest.title,backgroundColor:"transparent",borderColor:"transparent",size:"2rem",source:(0,jsx_runtime.jsx)(icons_dist.ChevronRightIcon,{}),...iconButton})]})};InteractiveListButtonItem.displayName="InteractiveListButtonItem";try{InteractiveListButtonItem.displayName="InteractiveListButtonItem",InteractiveListButtonItem.__docgenInfo={description:"",displayName:"InteractiveListButtonItem",props:{iconButton:{defaultValue:null,description:"Button props inherited from Nimbus components",name:"iconButton",required:!0,type:{name:'Omit<IconButtonProperties, "backgroundColor" | "borderColor" | "source" | "size"> & Omit<IconButtonProps, "backgroundColor" | "borderColor" | "source" | "size">'}},title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},topDivider:{defaultValue:{value:"true"},description:"Determines if the row has a top border.",name:"topDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListButtonItem/InteractiveListButtonItem.tsx#InteractiveListButtonItem"]={docgenInfo:InteractiveListButtonItem.__docgenInfo,name:"InteractiveListButtonItem",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListButtonItem/InteractiveListButtonItem.tsx#InteractiveListButtonItem"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListButtonItemSkeleton=({className:_className,style:_style,...rest})=>(0,jsx_runtime.jsxs)(InteractiveListRow,{children:[(0,jsx_runtime.jsx)(InteractiveList.StructureSkeleton,{...rest}),(0,jsx_runtime.jsx)(dist.IconButton.Skeleton,{})]});InteractiveListButtonItemSkeleton.displayName="InteractiveListButtonItemSkeleton";try{InteractiveListButtonItemSkeleton.displayName="InteractiveListButtonItemSkeleton",InteractiveListButtonItemSkeleton.__docgenInfo={description:"",displayName:"InteractiveListButtonItemSkeleton",props:{title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListButtonItemSkeleton/InteractiveListButtonItemSkeleton.tsx#InteractiveListButtonItemSkeleton"]={docgenInfo:InteractiveListButtonItemSkeleton.__docgenInfo,name:"InteractiveListButtonItemSkeleton",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListButtonItemSkeleton/InteractiveListButtonItemSkeleton.tsx#InteractiveListButtonItemSkeleton"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListCheckboxItem=({className:_className,style:_style,checkbox,...rest})=>{const itemID=generateID(rest.title);return(0,jsx_runtime.jsxs)(InteractiveListRow,{role:"menuitemcheckbox","aria-checked":checkbox.checked,as:"label",htmlFor:itemID,topDivider:rest.topDivider,children:[(0,jsx_runtime.jsx)(dist.Checkbox,{id:itemID,...checkbox}),(0,jsx_runtime.jsx)(InteractiveListStructure,{...rest})]})};InteractiveListCheckboxItem.displayName="InteractiveListCheckboxItem";try{InteractiveListCheckboxItem.displayName="InteractiveListCheckboxItem",InteractiveListCheckboxItem.__docgenInfo={description:"",displayName:"InteractiveListCheckboxItem",props:{checkbox:{defaultValue:null,description:"Checkbox props inherited from Nimbus components.",name:"checkbox",required:!0,type:{name:"CheckboxProperties & InputHTMLAttributes<HTMLInputElement>"}},title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},topDivider:{defaultValue:{value:"true"},description:"Determines if the row has a top border.",name:"topDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListCheckboxItem/InteractiveListCheckboxItem.tsx#InteractiveListCheckboxItem"]={docgenInfo:InteractiveListCheckboxItem.__docgenInfo,name:"InteractiveListCheckboxItem",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListCheckboxItem/InteractiveListCheckboxItem.tsx#InteractiveListCheckboxItem"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListCheckboxItemSkeleton=({className:_className,style:_style,...rest})=>(0,jsx_runtime.jsxs)(InteractiveListRow,{role:"menuitemcheckbox",children:[(0,jsx_runtime.jsx)(dist.Skeleton,{width:"1rem",height:"1rem",borderRadius:"0.25rem"}),(0,jsx_runtime.jsx)(InteractiveList.StructureSkeleton,{...rest})]});InteractiveListCheckboxItemSkeleton.displayName="InteractiveListCheckboxItemSkeleton";try{InteractiveListCheckboxItemSkeleton.displayName="InteractiveListCheckboxItemSkeleton",InteractiveListCheckboxItemSkeleton.__docgenInfo={description:"",displayName:"InteractiveListCheckboxItemSkeleton",props:{title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListCheckboxItemSkeleton/InteractiveListCheckboxItemSkeleton.tsx#InteractiveListCheckboxItemSkeleton"]={docgenInfo:InteractiveListCheckboxItemSkeleton.__docgenInfo,name:"InteractiveListCheckboxItemSkeleton",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListCheckboxItemSkeleton/InteractiveListCheckboxItemSkeleton.tsx#InteractiveListCheckboxItemSkeleton"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListRadioItem=({className:_className,style:_style,radio,...rest})=>{const itemID=generateID(rest.title);return(0,jsx_runtime.jsxs)(InteractiveListRow,{role:"menuitemradio","aria-checked":radio.checked,as:"label",htmlFor:itemID,topDivider:rest.topDivider,children:[(0,jsx_runtime.jsx)(dist.Radio,{id:itemID,...radio}),(0,jsx_runtime.jsx)(InteractiveListStructure,{...rest})]})};InteractiveListRadioItem.displayName="InteractiveListRadioItem";try{InteractiveListRadioItem.displayName="InteractiveListRadioItem",InteractiveListRadioItem.__docgenInfo={description:"",displayName:"InteractiveListRadioItem",props:{radio:{defaultValue:null,description:"Radio props inherited from Nimbus components.",name:"radio",required:!0,type:{name:"RadioProperties & InputHTMLAttributes<HTMLInputElement>"}},title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},topDivider:{defaultValue:{value:"true"},description:"Determines if the row has a top border.",name:"topDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListRadioItem/InteractiveListRadioItem.tsx#InteractiveListRadioItem"]={docgenInfo:InteractiveListRadioItem.__docgenInfo,name:"InteractiveListRadioItem",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListRadioItem/InteractiveListRadioItem.tsx#InteractiveListRadioItem"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListRadioItemSkeleton=({className:_className,style:_style,...rest})=>(0,jsx_runtime.jsxs)(InteractiveListRow,{children:[(0,jsx_runtime.jsx)(dist.Skeleton,{width:"1rem",height:"1rem",borderRadius:"0.75rem"}),(0,jsx_runtime.jsx)(InteractiveList.StructureSkeleton,{...rest})]});InteractiveListRadioItemSkeleton.displayName="InteractiveListRadioItemSkeleton";try{InteractiveListRadioItemSkeleton.displayName="InteractiveListRadioItemSkeleton",InteractiveListRadioItemSkeleton.__docgenInfo={description:"",displayName:"InteractiveListRadioItemSkeleton",props:{title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListRadioItemSkeleton/InteractiveListRadioItemSkeleton.tsx#InteractiveListRadioItemSkeleton"]={docgenInfo:InteractiveListRadioItemSkeleton.__docgenInfo,name:"InteractiveListRadioItemSkeleton",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListRadioItemSkeleton/InteractiveListRadioItemSkeleton.tsx#InteractiveListRadioItemSkeleton"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListToggleItem=({className:_className,style:_style,toggle,...rest})=>{const itemID=generateID(rest.title);return(0,jsx_runtime.jsxs)(InteractiveListRow,{role:"menuitem",as:"label",htmlFor:itemID,topDivider:rest.topDivider,children:[(0,jsx_runtime.jsx)(InteractiveListStructure,{...rest}),(0,jsx_runtime.jsx)(dist.Toggle,{id:itemID,...toggle})]})};InteractiveListToggleItem.displayName="InteractiveListToggleItem";try{InteractiveListToggleItem.displayName="InteractiveListToggleItem",InteractiveListToggleItem.__docgenInfo={description:"",displayName:"InteractiveListToggleItem",props:{toggle:{defaultValue:null,description:"Toggle props inherited from Nimbus components.",name:"toggle",required:!0,type:{name:"ToggleProperties & InputHTMLAttributes<HTMLInputElement>"}},title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},topDivider:{defaultValue:{value:"true"},description:"Determines if the row has a top border.",name:"topDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListToggleItem/InteractiveListToggleItem.tsx#InteractiveListToggleItem"]={docgenInfo:InteractiveListToggleItem.__docgenInfo,name:"InteractiveListToggleItem",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListToggleItem/InteractiveListToggleItem.tsx#InteractiveListToggleItem"})}catch(__react_docgen_typescript_loader_error){}const InteractiveListToggleItemSkeleton=({className:_className,style:_style,toggle,...rest})=>(0,jsx_runtime.jsxs)(InteractiveListRow,{children:[(0,jsx_runtime.jsx)(InteractiveList.StructureSkeleton,{...rest}),(0,jsx_runtime.jsx)(dist.Skeleton,{width:"2rem",height:"1rem",borderRadius:"0.5rem","data-testid":"toggle-skeleton"})]});InteractiveListToggleItemSkeleton.displayName="InteractiveListToggleItemSkeleton";try{InteractiveListToggleItemSkeleton.displayName="InteractiveListToggleItemSkeleton",InteractiveListToggleItemSkeleton.__docgenInfo={description:"",displayName:"InteractiveListToggleItemSkeleton",props:{toggle:{defaultValue:null,description:"Toggle props inherited from Nimbus components.",name:"toggle",required:!0,type:{name:"ToggleProperties & InputHTMLAttributes<HTMLInputElement>"}},title:{defaultValue:null,description:"Title of the list item element. Also used to generate the ID for the interactive element.",name:"title",required:!1,type:{name:"string"}},showTitle:{defaultValue:null,description:"Determines if the title is visible or not.",name:"showTitle",required:!1,type:{name:"boolean"}},description:{defaultValue:null,description:"Description of the list item element.",name:"description",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Custom content for the list item element.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/components/InteractiveListToggleItemSkeleton/InteractiveListToggleItemSkeleton.tsx#InteractiveListToggleItemSkeleton"]={docgenInfo:InteractiveListToggleItemSkeleton.__docgenInfo,name:"InteractiveListToggleItemSkeleton",path:"packages/react/src/components/InteractiveList/src/components/InteractiveListToggleItemSkeleton/InteractiveListToggleItemSkeleton.tsx#InteractiveListToggleItemSkeleton"})}catch(__react_docgen_typescript_loader_error){}const InteractiveList=({className:_className,style:_style,children,...rest})=>(0,jsx_runtime.jsx)(DataList.F,{role:"menu",...rest,children});InteractiveList.displayName="InteractiveList",InteractiveList.Structure=InteractiveListStructure,InteractiveList.StructureSkeleton=InteractiveListStructureSkeleton,InteractiveList.ButtonItem=InteractiveListButtonItem,InteractiveList.ButtonItemSkeleton=InteractiveListButtonItemSkeleton,InteractiveList.CheckboxItem=InteractiveListCheckboxItem,InteractiveList.CheckboxItemSkeleton=InteractiveListCheckboxItemSkeleton,InteractiveList.RadioItem=InteractiveListRadioItem,InteractiveList.RadioItemSkeleton=InteractiveListRadioItemSkeleton,InteractiveList.ToggleItem=InteractiveListToggleItem,InteractiveList.ToggleItemSkeleton=InteractiveListToggleItemSkeleton,InteractiveList.displayName="InteractiveList",InteractiveList.Structure.displayName="InteractiveList.Structure",InteractiveList.ButtonItem.displayName="InteractiveList.ButtonItem",InteractiveList.CheckboxItem.displayName="InteractiveList.CheckboxItem",InteractiveList.RadioItem.displayName="InteractiveList.RadioItem",InteractiveList.ToggleItem.displayName="InteractiveList.ToggleItem",InteractiveList.StructureSkeleton.displayName="InteractiveList.StructureSkeleton",InteractiveList.ButtonItemSkeleton.displayName="InteractiveList.ButtonItemSkeleton",InteractiveList.CheckboxItemSkeleton.displayName="InteractiveList.CheckboxItemSkeleton",InteractiveList.RadioItemSkeleton.displayName="InteractiveList.RadioItemSkeleton",InteractiveList.ToggleItemSkeleton.displayName="InteractiveList.ToggleItemSkeleton";try{InteractiveList.displayName="InteractiveList",InteractiveList.__docgenInfo={description:"",displayName:"InteractiveList",props:{children:{defaultValue:null,description:"Content of the InteractiveList\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}},bottomDivider:{defaultValue:{value:"true"},description:"Defines whether the List has a bottom border.",name:"bottomDivider",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/InteractiveList/src/InteractiveList.tsx#InteractiveList"]={docgenInfo:InteractiveList.__docgenInfo,name:"InteractiveList",path:"packages/react/src/components/InteractiveList/src/InteractiveList.tsx#InteractiveList"})}catch(__react_docgen_typescript_loader_error){}}}]);