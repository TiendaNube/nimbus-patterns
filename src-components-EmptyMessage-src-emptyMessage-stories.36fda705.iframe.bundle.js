"use strict";(self.webpackChunknimbus_patterns=self.webpackChunknimbus_patterns||[]).push([[9360],{"./packages/react/src/components/EmptyMessage/src/emptyMessage.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,default:()=>emptyMessage_stories,withIcon:()=>withIcon,withImage:()=>withImage});__webpack_require__("./node_modules/react/index.js");var dist=__webpack_require__("./packages/react/src/components/EmptyMessage/node_modules/@nimbus-ds/icons/dist/index.js"),components_dist=__webpack_require__("./node_modules/@nimbus-ds/components/dist/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const EmptyMessage=({className:_className,style:_style,illustration,icon,title,text,actions,...rest})=>{const emptyMessageContent=(0,jsx_runtime.jsxs)(components_dist.Box,{...rest,display:"flex",flexDirection:"column",gap:"1",alignItems:{xs:"center",lg:illustration?"flex-start":"center"},justifyContent:illustration?"center":"flex-start",children:[icon&&(0,jsx_runtime.jsx)(components_dist.Icon,{source:icon}),(0,jsx_runtime.jsx)(components_dist.Title,{as:"h4",textAlign:{xs:"center",lg:illustration?"left":"center"},children:title}),text&&(0,jsx_runtime.jsx)(components_dist.Text,{textAlign:{xs:"center",lg:illustration?"left":"center"},children:text}),actions&&(0,jsx_runtime.jsx)(components_dist.Box,{display:"flex",justifyContent:{xs:"center",lg:"flex-start"},gap:"2",mt:"1",flexWrap:"wrap",children:actions})]});return illustration?(0,jsx_runtime.jsxs)(components_dist.Box,{display:"grid",gridTemplateColumns:{xs:"1fr",lg:"1fr 1fr"},gridTemplateAreas:{xs:"auto auto",lg:"auto"},gap:"4",children:[(0,jsx_runtime.jsx)(components_dist.Box,{display:"flex",alignItems:"center",justifyContent:"center",children:illustration}),emptyMessageContent]}):emptyMessageContent};EmptyMessage.displayName="EmptyMessage";try{EmptyMessage.displayName="EmptyMessage",EmptyMessage.__docgenInfo={description:"",displayName:"EmptyMessage",props:{illustration:{defaultValue:null,description:"Optional node that contains an illustration for the component. Will stack vertically on mobile and horizontally on desktop.\n@TJS-type React.ReactNode",name:"illustration",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"Optional icon to display on top of the text.\n@TJS-type React.ReactNode",name:"icon",required:!1,type:{name:"ReactNode"}},title:{defaultValue:null,description:"Title of the component.",name:"title",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"Optional content text for additional context.",name:"text",required:!1,type:{name:"string"}},actions:{defaultValue:null,description:"Optional node to showcase buttons or actions.\n@TJS-type React.ReactNode",name:"actions",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/EmptyMessage/src/EmptyMessage.tsx#EmptyMessage"]={docgenInfo:EmptyMessage.__docgenInfo,name:"EmptyMessage",path:"packages/react/src/components/EmptyMessage/src/EmptyMessage.tsx#EmptyMessage"})}catch(__react_docgen_typescript_loader_error){}const emptyMessage_stories={title:"Patterns/EmptyMessage",component:EmptyMessage,argTypes:{actions:{control:{disable:!0}},illustration:{control:{disable:!0}},icon:{control:{disable:!0}}},tags:["autodocs"]},basic={args:{title:"This is an empty message component.",text:"This component has an icon.",actions:(0,jsx_runtime.jsxs)(components_dist.Link,{appearance:"primary",textDecoration:"none",children:[(0,jsx_runtime.jsx)(components_dist.Icon,{color:"currentColor",source:(0,jsx_runtime.jsx)(dist.RedoIcon,{})}),"Reload page"]})}},withIcon={args:{title:"This is an empty message component.",text:"This component has an icon.",actions:(0,jsx_runtime.jsxs)(components_dist.Link,{appearance:"primary",children:[(0,jsx_runtime.jsx)(components_dist.Icon,{color:"currentColor",source:(0,jsx_runtime.jsx)(dist.RedoIcon,{})}),"Reload page"]}),icon:(0,jsx_runtime.jsx)(dist.SearchIcon,{size:32})}},withImage={args:{title:"This empty message has an illustration.",text:"When in mobile, it will stack vertically, while on desktop it will span two columns.",actions:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components_dist.Button,{appearance:"primary",children:"Primary action"}),(0,jsx_runtime.jsx)(components_dist.Link,{appearance:"primary",textDecoration:"none",children:"Secondary action"})]}),illustration:(0,jsx_runtime.jsx)("img",{width:300,alt:"This shows the possibility of illustration on an empty message",src:"https://d26lpennugtm8s.cloudfront.net/assets/common/img/empty-screens/empty-orders.png"})}};basic.parameters={...basic.parameters,docs:{...basic.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "This is an empty message component.",\n    text: "This component has an icon.",\n    actions: <Link appearance="primary" textDecoration="none">\n        <Icon color="currentColor" source={<RedoIcon />} />\n        Reload page\n      </Link>\n  }\n}',...basic.parameters?.docs?.source}}},withIcon.parameters={...withIcon.parameters,docs:{...withIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "This is an empty message component.",\n    text: "This component has an icon.",\n    actions: <Link appearance="primary">\n        <Icon color="currentColor" source={<RedoIcon />} />\n        Reload page\n      </Link>,\n    icon: <SearchIcon size={32} />\n  }\n}',...withIcon.parameters?.docs?.source}}},withImage.parameters={...withImage.parameters,docs:{...withImage.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "This empty message has an illustration.",\n    text: "When in mobile, it will stack vertically, while on desktop it will span two columns.",\n    actions: <>\n        <Button appearance="primary">Primary action</Button>\n        <Link appearance="primary" textDecoration="none">\n          Secondary action\n        </Link>\n      </>,\n    illustration: <img width={300} alt="This shows the possibility of illustration on an empty message" src="https://d26lpennugtm8s.cloudfront.net/assets/common/img/empty-screens/empty-orders.png" />\n  }\n}',...withImage.parameters?.docs?.source}}};const __namedExportsOrder=["basic","withIcon","withImage"]}}]);