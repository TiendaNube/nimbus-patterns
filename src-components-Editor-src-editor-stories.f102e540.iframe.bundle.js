"use strict";(self.webpackChunknimbus_patterns=self.webpackChunknimbus_patterns||[]).push([[5135],{"./packages/react/src/components/Editor/src/editor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>editor_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@nimbus-ds/components/dist/index.js"),styles_dist=__webpack_require__("./node_modules/@nimbus-ds/styles/dist/index.js"),LexicalComposer=__webpack_require__("./node_modules/@lexical/react/LexicalComposer.js"),LexicalOnChangePlugin=__webpack_require__("./node_modules/@lexical/react/LexicalOnChangePlugin.js"),LexicalRichTextPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalRichTextPlugin.js"),LexicalContentEditable=__webpack_require__("./node_modules/@lexical/react/LexicalContentEditable.js"),LexicalErrorBoundary=__webpack_require__("./node_modules/@lexical/react/LexicalErrorBoundary.js"),LexicalErrorBoundary_default=__webpack_require__.n(LexicalErrorBoundary),Lexical=__webpack_require__("./node_modules/lexical/Lexical.js"),icons_dist=__webpack_require__("./node_modules/@nimbus-ds/icons/dist/index.js"),LexicalUtils=__webpack_require__("./node_modules/@lexical/utils/LexicalUtils.js"),LexicalComposerContext=__webpack_require__("./node_modules/@lexical/react/LexicalComposerContext.js");const FORMAT_HEADING_COMMAND=(0,Lexical.createCommand)("FORMAT_HEADING_COMMAND"),FORMAT_PARAGRAPH_COMMAND=(0,Lexical.createCommand)("FORMAT_PARAGRAPH_COMMAND"),CLEAR_FORMATTING_COMMAND=(0,Lexical.createCommand)("CLEAR_FORMATING_COMMAND"),INSERT_YOUTUBE_COMMAND=(0,Lexical.createCommand)("INSERT_YOUTUBE_COMMAND"),supportedHeaderTypes=[{tag:"h3",command:FORMAT_HEADING_COMMAND},{tag:"h4",command:FORMAT_HEADING_COMMAND},{tag:"paragraph",command:FORMAT_PARAGRAPH_COMMAND}],headerTranslations={h3:"Título",h4:"Subtítulo",paragraph:"Parágrafo"},initialEditorContext={state:{blockType:"paragraph",canUndo:!1,canRedo:!1,isBold:!1,isLink:!1,isItalic:!1}},EditorContext=(0,react.createContext)(initialEditorContext);var LexicalLink=__webpack_require__("./node_modules/@lexical/link/LexicalLink.js"),LexicalList=__webpack_require__("./node_modules/@lexical/list/LexicalList.js"),LexicalRichText=__webpack_require__("./node_modules/@lexical/rich-text/LexicalRichText.js"),LexicalSelection=__webpack_require__("./node_modules/@lexical/selection/LexicalSelection.js");let EditorActionKind;!function(EditorActionKind){EditorActionKind.BLOCK_TYPE="BLOCK_TYPE",EditorActionKind.CAN_UNDO="CAN_UNDO",EditorActionKind.CAN_REDO="CAN_REDO",EditorActionKind.IS_BOLD="IS_BOLD",EditorActionKind.IS_ITALIC="IS_ITALIC",EditorActionKind.IS_LINK="IS_LINK"}(EditorActionKind||(EditorActionKind={}));const reducer=(state,action)=>{switch(action.type){case EditorActionKind.BLOCK_TYPE:return{...state,blockType:action.payload};case EditorActionKind.CAN_REDO:return{...state,canRedo:action.payload};case EditorActionKind.CAN_UNDO:return{...state,canUndo:action.payload};case EditorActionKind.IS_BOLD:return{...state,isBold:action.payload};case EditorActionKind.IS_ITALIC:return{...state,isItalic:action.payload};case EditorActionKind.IS_LINK:return{...state,isLink:action.payload};default:return state}},getSelectedNode=selection=>{const{anchor}=selection,{focus}=selection,anchorNode=selection.anchor.getNode(),focusNode=selection.focus.getNode();if(anchorNode===focusNode)return anchorNode;return selection.isBackward()?(0,LexicalSelection.$isAtNodeEnd)(focus)?anchorNode:focusNode:(0,LexicalSelection.$isAtNodeEnd)(anchor)?anchorNode:focusNode};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=({ref:_ref,backgroundColor,selected,...props})=>(0,jsx_runtime.jsx)(dist.Box,{as:"button",type:"button","data-id":"button-toolbar",backgroundColor:{hover:"primary-surface",xs:selected?"primary-surface":"transparent"},pointerEvents:props.disabled?"none":"auto",borderRadius:"1",cursor:"pointer",borderWidth:"none",color:props.disabled?"neutral-interactive":"primary-interactive",height:"32px",minWidth:"32px",...props,p:"2"});Button.displayName="Button";try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{selected:{defaultValue:null,description:"",name:"selected",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"enum",value:[{value:'"div"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/components/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"packages/react/src/components/Editor/src/components/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}const Toolbar=({children,className})=>{const toolbarRef=(0,react.useRef)(null),buttonRefs=(0,react.useRef)([]),{calcButtonWidths,calcVisibleButtons,updateToolbar,context}=(()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),[windowWidth,setWindowWidth]=(0,react.useState)(window.innerWidth),[state,dispatch]=(0,react.useReducer)(reducer,initialEditorContext.state),handleResize=()=>{setWindowWidth(window.innerWidth)};return(0,react.useEffect)((()=>(window.addEventListener("resize",handleResize),()=>{window.removeEventListener("resize",handleResize)})),[]),{windowWidth,calcButtonWidths:(0,react.useCallback)((buttonRefs=>buttonRefs.current.map((ref=>ref?.getBoundingClientRect().width))),[]),calcVisibleButtons:(0,react.useCallback)(((buttonWidths,availableWidth)=>buttonWidths.reduce(((prev,curr)=>(prev.totalWidthButtons+curr<=availableWidth&&(prev.maxVisibleButtons+=1,prev.totalWidthButtons+=Math.ceil(curr+16)),prev)),{totalWidthButtons:0,maxVisibleButtons:0}).maxVisibleButtons),[]),updateToolbar:(0,react.useCallback)((()=>{const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const anchorNode=selection.anchor.getNode(),element="root"===anchorNode.getKey()?anchorNode:anchorNode.getTopLevelElementOrThrow(),elementKey=element.getKey(),elementDOM=editor.getElementByKey(elementKey);dispatch({type:EditorActionKind.IS_BOLD,payload:selection?.hasFormat?.("bold")}),dispatch({type:EditorActionKind.IS_ITALIC,payload:selection?.hasFormat?.("italic")});const node=getSelectedNode(selection),parent=node.getParent();if(dispatch({type:EditorActionKind.IS_LINK,payload:!(!(0,LexicalLink.$isLinkNode)(parent)&&!(0,LexicalLink.$isLinkNode)(node))??!1}),null!==elementDOM)if((0,LexicalList.$isListNode)(element)){const parentList=(0,LexicalUtils.$getNearestNodeOfType)(anchorNode,LexicalList.ListNode),type=parentList?parentList.getTag():element.getTag();dispatch({type:EditorActionKind.BLOCK_TYPE,payload:type})}else{const type=(0,LexicalRichText.$isHeadingNode)(element)?element.getTag():element.getType();dispatch({type:EditorActionKind.BLOCK_TYPE,payload:type})}}}),[editor]),context:(0,react.useMemo)((()=>({state,dispatch})),[state,dispatch])}})(),[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),[activeEditor,setActiveEditor]=(0,react.useState)(editor),[visibleButtons,setVisibleButtons]=(0,react.useState)(react.Children.toArray(children)),[buttonWidths,setButtonWidths]=(0,react.useState)([]),[hiddenButtons,setHiddenButtons]=(0,react.useState)([]);(0,react.useEffect)((()=>{setButtonWidths(calcButtonWidths(buttonRefs))}),[buttonRefs,calcButtonWidths]);const availableWidth=(toolbarRef.current?.clientWidth??0)-48;return(0,react.useEffect)((()=>{const maxVisibleButtons=calcVisibleButtons(buttonWidths,availableWidth),buttons=react.Children.toArray(children);setVisibleButtons(buttons.slice(0,maxVisibleButtons)),setHiddenButtons(buttons.slice(maxVisibleButtons))}),[buttonWidths,availableWidth,calcVisibleButtons,children]),(0,react.useEffect)((()=>editor.registerCommand(Lexical.SELECTION_CHANGE_COMMAND,((_payload,newEditor)=>(updateToolbar(),setActiveEditor(newEditor),!1)),Lexical.COMMAND_PRIORITY_CRITICAL)),[editor,updateToolbar]),(0,react.useEffect)((()=>{(0,LexicalUtils.mergeRegister)(activeEditor.registerUpdateListener((({editorState})=>{editorState.read((()=>{updateToolbar()}))})))}),[updateToolbar,activeEditor]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{ref:toolbarRef,className,children:(0,jsx_runtime.jsxs)(EditorContext.Provider,{value:context,children:[(0,jsx_runtime.jsx)(dist.Box,{display:"flex",alignItems:"center",gap:"2",flexWrap:"wrap",children:visibleButtons.map(((button,index)=>(0,jsx_runtime.jsx)("div",{ref:ref=>{ref&&(buttonRefs.current[index]=ref)},children:button},`button-toolbar-${index}`)))}),!!hiddenButtons.length&&(0,jsx_runtime.jsx)(dist.Popover,{width:"fit-content",maxWidth:(toolbarRef.current?.clientWidth??0)-16+"px",padding:"small",offset:8,content:(0,jsx_runtime.jsx)(dist.Box,{display:"flex",gap:"2",flexWrap:"wrap",justifyContent:"flex-end",children:hiddenButtons.filter((child=>!child?.key.includes("divider")))}),arrow:!1,position:"bottom-end",children:(0,jsx_runtime.jsx)(Button,{children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.EllipsisIcon,{}),color:"currentColor"})})})]})}),headerTranslations[context.state.blockType]&&(0,jsx_runtime.jsx)(dist.Box,{display:{xs:"block",md:"none"},position:"absolute",bottom:"0",py:"1",px:"2",width:"100%",borderWidth:"none",borderTopWidth:"1",borderColor:"neutral-surfaceHighlight",borderStyle:"solid",children:(0,jsx_runtime.jsx)(dist.Text,{fontSize:"caption",lineHeight:"caption",children:headerTranslations[context.state.blockType]})})]})};try{Toolbar.displayName="Toolbar",Toolbar.__docgenInfo={description:"",displayName:"Toolbar",props:{children:{defaultValue:null,description:"The content of the alert.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"((string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | ReactFragment | ReactPortal | ReactNode[]) & (string | ... 4 more ... | ReactPortal)) | null"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/components/Toolbar/Toolbar.tsx#Toolbar"]={docgenInfo:Toolbar.__docgenInfo,name:"Toolbar",path:"packages/react/src/components/Editor/src/components/Toolbar/Toolbar.tsx#Toolbar"})}catch(__react_docgen_typescript_loader_error){}const Placeholder=({text})=>text?(0,jsx_runtime.jsx)("div",{className:styles_dist.editor.classnames.placeholder,children:text}):null;Placeholder.displayName="Placeholder";try{Placeholder.displayName="Placeholder",Placeholder.__docgenInfo={description:"",displayName:"Placeholder",props:{text:{defaultValue:null,description:"",name:"text",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/components/Placeholder/Placeholder.tsx#Placeholder"]={docgenInfo:Placeholder.__docgenInfo,name:"Placeholder",path:"packages/react/src/components/Editor/src/components/Placeholder/Placeholder.tsx#Placeholder"})}catch(__react_docgen_typescript_loader_error){}const useEditorState=()=>(0,react.useContext)(EditorContext),Bold=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{state}=useEditorState();return(0,jsx_runtime.jsx)(Button,{"aria-label":"Format Bold",onClick:()=>editor.dispatchCommand(Lexical.FORMAT_TEXT_COMMAND,"bold"),selected:state.isBold,children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.BoldIcon,{}),color:"currentColor"})})};Bold.displayName="Bold";try{Bold.displayName="Bold",Bold.__docgenInfo={description:"",displayName:"Bold",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/Bold/Bold.tsx#Bold"]={docgenInfo:Bold.__docgenInfo,name:"Bold",path:"packages/react/src/components/Editor/src/actions/Bold/Bold.tsx#Bold"})}catch(__react_docgen_typescript_loader_error){}const ClearFormatting=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return(0,jsx_runtime.jsx)(Button,{"aria-label":"Undo",onClick:()=>editor.dispatchCommand(CLEAR_FORMATTING_COMMAND,void 0),children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.RemoveFormatIcon,{}),color:"currentColor"})})};ClearFormatting.displayName="ClearFormatting";try{ClearFormatting.displayName="ClearFormatting",ClearFormatting.__docgenInfo={description:"",displayName:"ClearFormatting",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/ClearFormatting/ClearFormatting.tsx#ClearFormatting"]={docgenInfo:ClearFormatting.__docgenInfo,name:"ClearFormatting",path:"packages/react/src/components/Editor/src/actions/ClearFormatting/ClearFormatting.tsx#ClearFormatting"})}catch(__react_docgen_typescript_loader_error){}const OrderedList=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{state}=useEditorState();return(0,jsx_runtime.jsx)(Button,{"aria-label":"List Ordered",onClick:()=>{return type="ol",command=LexicalList.INSERT_ORDERED_LIST_COMMAND,void(state.blockType!==type?editor.dispatchCommand(command,void 0):editor.dispatchCommand(LexicalList.REMOVE_LIST_COMMAND,void 0));var type,command},selected:"ol"===state.blockType,children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.OrderedListIcon,{}),color:"currentColor"})})};OrderedList.displayName="OrderedList";try{OrderedList.displayName="OrderedList",OrderedList.__docgenInfo={description:"",displayName:"OrderedList",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/OrderedList/OrderedList.tsx#OrderedList"]={docgenInfo:OrderedList.__docgenInfo,name:"OrderedList",path:"packages/react/src/components/Editor/src/actions/OrderedList/OrderedList.tsx#OrderedList"})}catch(__react_docgen_typescript_loader_error){}const UnorderedList=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{state}=useEditorState();return(0,jsx_runtime.jsx)(Button,{"aria-label":"List Unordered",onClick:()=>{return type="ul",command=LexicalList.INSERT_UNORDERED_LIST_COMMAND,void(state.blockType!==type?editor.dispatchCommand(command,void 0):editor.dispatchCommand(LexicalList.REMOVE_LIST_COMMAND,void 0));var type,command},selected:"ul"===state.blockType,children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.ListIcon,{}),color:"currentColor"})})};UnorderedList.displayName="UnorderedList";try{UnorderedList.displayName="UnorderedList",UnorderedList.__docgenInfo={description:"",displayName:"UnorderedList",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/UnorderedList/UnorderedList.tsx#UnorderedList"]={docgenInfo:UnorderedList.__docgenInfo,name:"UnorderedList",path:"packages/react/src/components/Editor/src/actions/UnorderedList/UnorderedList.tsx#UnorderedList"})}catch(__react_docgen_typescript_loader_error){}const initialTranslationContext={translations:{h3:"Título",h4:"Subtítulo",paragraph:"Parágrafo",embed_youtube_video:"Embed Youtube Video"}},TranslateContext=(0,react.createContext)(initialTranslationContext),useTranslate=()=>(0,react.useContext)(TranslateContext),Header=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{state}=useEditorState(),{translations}=useTranslate();return(0,jsx_runtime.jsx)(dist.Popover,{width:"fit-content",padding:"small",offset:8,content:(0,jsx_runtime.jsx)(dist.Box,{display:"flex",flexDirection:"column",gap:"1",children:supportedHeaderTypes.map((supportedHeaderType=>(0,jsx_runtime.jsxs)(dist.Box,{as:"button",type:"button",cursor:"pointer",borderWidth:"none",color:"primary-interactive",display:"flex",gap:"1",p:"2",borderRadius:"1",backgroundColor:{hover:"primary-surface",xs:state.blockType===supportedHeaderType.tag?"primary-surface":"transparent"},onClick:()=>editor.dispatchCommand(supportedHeaderType.command,supportedHeaderType.tag),children:[(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.TextSizeIcon,{}),color:"currentColor"}),(0,jsx_runtime.jsx)(dist.Text,{color:"currentColor",children:translations[supportedHeaderType.tag]})]},supportedHeaderType.tag)))}),arrow:!1,position:"bottom-start",children:(0,jsx_runtime.jsxs)(dist.Box,{as:"button",type:"button","aria-label":"Formatting options for text style",display:"flex",justifyContent:"flex-start",alignItems:"center",gap:"1",p:"2",borderWidth:"none",borderRadius:"1",color:"primary-interactive",backgroundColor:{hover:"primary-surface",xs:"transparent"},cursor:"pointer",children:[(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.TextSizeIcon,{}),color:"currentColor"}),(0,jsx_runtime.jsx)(dist.Box,{display:{xs:"none",md:"flex"},children:translations[state.blockType]&&(0,jsx_runtime.jsx)(dist.Text,{as:"span",color:"currentColor",children:translations[state.blockType]})})]})})};Header.displayName="Header";try{Header.displayName="Header",Header.__docgenInfo={description:"",displayName:"Header",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/Header/Header.tsx#Header"]={docgenInfo:Header.__docgenInfo,name:"Header",path:"packages/react/src/components/Editor/src/actions/Header/Header.tsx#Header"})}catch(__react_docgen_typescript_loader_error){}const History=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{state,dispatch}=useEditorState();return(0,react.useEffect)((()=>{(0,LexicalUtils.mergeRegister)(editor.registerCommand(Lexical.CAN_UNDO_COMMAND,(payload=>(dispatch({type:EditorActionKind.CAN_UNDO,payload}),!1)),Lexical.COMMAND_PRIORITY_CRITICAL),editor.registerCommand(Lexical.CAN_REDO_COMMAND,(payload=>(dispatch({type:EditorActionKind.CAN_REDO,payload}),!1)),Lexical.COMMAND_PRIORITY_CRITICAL))}),[editor,dispatch]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button,{"aria-label":"Undo",disabled:!state.canUndo,onClick:()=>editor.dispatchCommand(Lexical.UNDO_COMMAND,void 0),children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.UndoIcon,{}),color:"currentColor"})}),(0,jsx_runtime.jsx)(Button,{"aria-label":"Redo",disabled:!state.canRedo,onClick:()=>editor.dispatchCommand(Lexical.REDO_COMMAND,void 0),children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.RedoIcon,{}),color:"currentColor"})})]})};try{History.displayName="History",History.__docgenInfo={description:"",displayName:"History",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/History/History.tsx#History"]={docgenInfo:History.__docgenInfo,name:"History",path:"packages/react/src/components/Editor/src/actions/History/History.tsx#History"})}catch(__react_docgen_typescript_loader_error){}const Italic=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{state}=useEditorState();return(0,jsx_runtime.jsx)(Button,{"aria-label":"Format ItalicIcon",onClick:()=>editor.dispatchCommand(Lexical.FORMAT_TEXT_COMMAND,"italic"),selected:state.isItalic,children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.ItalicIcon,{}),color:"currentColor"})})};Italic.displayName="Italic";try{Italic.displayName="Italic",Italic.__docgenInfo={description:"",displayName:"Italic",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/Italic/Italic.tsx#Italic"]={docgenInfo:Italic.__docgenInfo,name:"Italic",path:"packages/react/src/components/Editor/src/actions/Italic/Italic.tsx#Italic"})}catch(__react_docgen_typescript_loader_error){}const SUPPORTED_URL_PROTOCOLS=new Set(["http:","https:","mailto:","sms:","tel:"]),Link=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{state}=useEditorState(),insertLink=(0,react.useCallback)((()=>{state.isLink?editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,null):editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,(url=>{try{const parsedUrl=new URL(url);if(!SUPPORTED_URL_PROTOCOLS.has(parsedUrl.protocol))return"about:blank"}catch{return url}return url})("https://"))}),[editor,state.isLink]);return(0,jsx_runtime.jsx)(Button,{"aria-label":"Undo",onClick:insertLink,selected:state.isLink,children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.LinkIcon,{}),color:"currentColor"})})};Link.displayName="Link";try{Link.displayName="Link",Link.__docgenInfo={description:"",displayName:"Link",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/Link/Link.tsx#Link"]={docgenInfo:Link.__docgenInfo,name:"Link",path:"packages/react/src/components/Editor/src/actions/Link/Link.tsx#Link"})}catch(__react_docgen_typescript_loader_error){}var LexicalAutoEmbedPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalAutoEmbedPlugin.js");const YoutubeEmbedConfig={contentName:"Youtube Video",exampleUrl:"https://www.youtube.com/watch?v=jNQXAC9IVRw",insertNode:(editor,result)=>{editor.dispatchCommand(INSERT_YOUTUBE_COMMAND,result.id)},keywords:["youtube","video"],parseUrl:async url=>{const match=/^.*(youtu\.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/.exec(url),id=match&&11===match?.[2].length?match[2]:null;return null!=id?{id,url}:null},type:"youtube-video"},Video=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return(0,jsx_runtime.jsx)(Button,{"aria-label":"Insert Video",onClick:()=>editor.dispatchCommand(LexicalAutoEmbedPlugin.INSERT_EMBED_COMMAND,YoutubeEmbedConfig.type),children:(0,jsx_runtime.jsx)(dist.Icon,{source:(0,jsx_runtime.jsx)(icons_dist.PlayIcon,{}),color:"currentColor"})})};Video.displayName="Video";try{Video.displayName="Video",Video.__docgenInfo={description:"",displayName:"Video",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/actions/Video/Video.tsx#Video"]={docgenInfo:Video.__docgenInfo,name:"Video",path:"packages/react/src/components/Editor/src/actions/Video/Video.tsx#Video"})}catch(__react_docgen_typescript_loader_error){}const Divider=()=>(0,jsx_runtime.jsx)(dist.Box,{"data-testid":"divider-toolbar",backgroundColor:"neutral-surfaceHighlight",borderRadius:"1",height:"32px",width:"1px"});Divider.displayName="Divider";try{Divider.displayName="Divider",Divider.__docgenInfo={description:"",displayName:"Divider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/components/Divider/Divider.tsx#Divider"]={docgenInfo:Divider.__docgenInfo,name:"Divider",path:"packages/react/src/components/Editor/src/components/Divider/Divider.tsx#Divider"})}catch(__react_docgen_typescript_loader_error){}var LexicalDecoratorBlockNode=__webpack_require__("./node_modules/@lexical/react/LexicalDecoratorBlockNode.js"),LexicalBlockWithAlignableContents=__webpack_require__("./node_modules/@lexical/react/LexicalBlockWithAlignableContents.js");const $createYouTubeNode=videoID=>new YouTubeNode_YouTubeNode(videoID),convertYoutubeElement=domNode=>{const videoID=domNode.getAttribute("data-lexical-youtube");if(videoID){return{node:$createYouTubeNode(videoID)}}return null},YouTubeComponent=({className,format,nodeKey,videoID})=>(0,jsx_runtime.jsx)(LexicalBlockWithAlignableContents.BlockWithAlignableContents,{className,format,nodeKey,children:(0,jsx_runtime.jsx)("iframe",{width:"560",height:"315",src:`https://www.youtube-nocookie.com/embed/${videoID}`,allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0,title:"YouTube video"})});YouTubeComponent.displayName="YouTubeComponent";class YouTubeNode_YouTubeNode extends LexicalDecoratorBlockNode.DecoratorBlockNode{static getType(){return"youtube"}static clone(node){return new YouTubeNode_YouTubeNode(node.__id,node.__format,node.__key)}static importJSON(serializedNode){const node=$createYouTubeNode(serializedNode.videoID);return node.setFormat(serializedNode.format),node}exportJSON(){return{...super.exportJSON(),type:"youtube",version:1,videoID:this.__id}}constructor(id,format,key){super(format,key),this.__id=id}exportDOM(){const element=document.createElement("iframe");return element.setAttribute("data-lexical-youtube",this.__id),element.setAttribute("width","560"),element.setAttribute("height","315"),element.setAttribute("src",`https://www.youtube-nocookie.com/embed/${this.__id}`),element.setAttribute("frameborder","0"),element.setAttribute("allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),element.setAttribute("allowfullscreen","true"),element.setAttribute("title","YouTube video"),{element}}static importDOM(){return{iframe:domNode=>domNode.hasAttribute("data-lexical-youtube")?{conversion:convertYoutubeElement,priority:1}:null}}updateDOM(){return!1}getId(){return this.__id}getTextContent(){return`https://www.youtube.com/watch?v=${this.__id}`}decorate(_editor,config){const embedBlockTheme=config.theme.embedBlock||{},className={base:embedBlockTheme.base||"",focus:embedBlockTheme.focus||""};return(0,jsx_runtime.jsx)(YouTubeComponent,{className,format:this.__format,nodeKey:this.getKey(),videoID:this.__id})}}const joinClassNames=classNames=>classNames.join(" "),defaultTheme={heading:{h3:joinClassNames([styles_dist.title.classnames.base,styles_dist.title.classnames.appearance.h3,styles_dist.title.sprinkle({fontSize:"6",lineHeight:"6",color:"primary-textHigh"})]),h4:joinClassNames([styles_dist.title.classnames.base,styles_dist.title.classnames.appearance.h4,styles_dist.title.sprinkle({fontSize:"5",lineHeight:"5",color:"primary-textHigh"})])},paragraph:joinClassNames([styles_dist.text.classnames.base,styles_dist.text.sprinkle({color:"neutral-textLow"})?.className??""]),link:joinClassNames([styles_dist.link.classnames.appearance.primary,styles_dist.link.classnames.base,styles_dist.link.sprinkle({textDecoration:"none"})]),list:{listitem:styles_dist.list.classnames.container__item,nested:{listitem:styles_dist.editor.classnames.nested_list__item},ul:styles_dist.list.classnames.container,ol:styles_dist.list.classnames.container},text:{italic:styles_dist.editor.classnames.text__italic,bold:joinClassNames([styles_dist.text.sprinkle({fontWeight:"bold"})?.className??""])}},aliasModules={bold:Bold,clearFormating:ClearFormatting,orderedList:OrderedList,unorderedList:UnorderedList,header:Header,history:History,italic:Italic,link:Link,video:Video,divider:Divider},defaultModules=["history","divider","header","divider","orderedList","unorderedList","divider","bold","italic","link","video","divider","clearFormating"],helpTextAppearance={danger:"danger-textLow",warning:"warning-textLow",success:"success-textLow",none:"neutral-textLow"},editorAppearance={danger:"danger",warning:"warning",success:"success",none:"neutral"},nodes=[LexicalLink.AutoLinkNode,LexicalRichText.HeadingNode,LexicalList.ListNode,LexicalList.ListItemNode,LexicalLink.LinkNode,YouTubeNode_YouTubeNode];var LexicalTabIndentationPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalTabIndentationPlugin.js"),LexicalLinkPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalLinkPlugin.js"),LexicalListPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalListPlugin.js"),LexicalAutoFocusPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalAutoFocusPlugin.js"),LexicalHistoryPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalHistoryPlugin.js"),LexicalAutoLinkPlugin=__webpack_require__("./node_modules/@lexical/react/LexicalAutoLinkPlugin.js");const urlRegExp=new RegExp(/((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=+$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,\w]+@)[A-Za-z0-9.-]+)((?:\/[+~%/.\w-_]*)?\??(?:[-+=&;%@.\w_]*)#?(?:[\w]*))?)/);function validateUrl(url){return"https://"===url||urlRegExp.test(url)}const MATCHERS=[(0,LexicalAutoLinkPlugin.createLinkMatcherWithRegExp)(/(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/,(text=>text)),(0,LexicalAutoLinkPlugin.createLinkMatcherWithRegExp)(/(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))/,(text=>`mailto:${text}`))],DefaultPlugins=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(LexicalListPlugin.ListPlugin,{}),(0,jsx_runtime.jsx)(LexicalLinkPlugin.LinkPlugin,{validateUrl}),(0,jsx_runtime.jsx)(LexicalAutoLinkPlugin.AutoLinkPlugin,{matchers:MATCHERS}),(0,jsx_runtime.jsx)(LexicalAutoFocusPlugin.AutoFocusPlugin,{}),(0,jsx_runtime.jsx)(LexicalHistoryPlugin.HistoryPlugin,{}),(0,jsx_runtime.jsx)(LexicalTabIndentationPlugin.TabIndentationPlugin,{})]});try{DefaultPlugins.displayName="DefaultPlugins",DefaultPlugins.__docgenInfo={description:"",displayName:"DefaultPlugins",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/plugins/DefaultPlugins/DefaultPlugins.tsx#DefaultPlugins"]={docgenInfo:DefaultPlugins.__docgenInfo,name:"DefaultPlugins",path:"packages/react/src/components/Editor/src/plugins/DefaultPlugins/DefaultPlugins.tsx#DefaultPlugins"})}catch(__react_docgen_typescript_loader_error){}var FormField=__webpack_require__("./packages/react/src/components/FormField/src/FormField.tsx");const CustomAutoEmbedPlugin=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),{translations}=useTranslate(),[text,setText]=(0,react.useState)(""),[showModal,setShowModal]=(0,react.useState)(!1),handleModal=()=>setShowModal((prevState=>!prevState)),[embedResult,setEmbedResult]=(0,react.useState)(null),[embedConfig,setEmbedConfig]=(0,react.useState)(null),validateText=(0,react.useMemo)((()=>((callback,delay)=>{let timeoutId;return text=>{window.clearTimeout(timeoutId),timeoutId=window.setTimeout((()=>{callback(text)}),delay)}})((inputText=>{const urlMatch=LexicalAutoEmbedPlugin.URL_MATCHER.exec(inputText);null!=embedConfig&&null!=inputText&&null!=urlMatch?Promise.resolve(embedConfig.parseUrl(inputText)).then((parseResult=>{setEmbedResult(parseResult)})):null!=embedResult&&setEmbedResult(null)}),200)),[embedConfig,embedResult]);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(dist.Modal,{open:showModal,onDismiss:handleModal,children:[(0,jsx_runtime.jsx)(dist.Modal.Header,{title:translations.embed_youtube_video}),(0,jsx_runtime.jsx)(dist.Modal.Body,{padding:"none",children:(0,jsx_runtime.jsx)(FormField.W.Input,{label:"URL",value:text,onChange:e=>{const{value}=e.target;setText(value),validateText(value)}})}),(0,jsx_runtime.jsx)(dist.Modal.Footer,{children:(0,jsx_runtime.jsx)(dist.Button,{disabled:!embedResult,onClick:()=>{null!=embedResult&&(embedConfig?.insertNode(editor,embedResult),handleModal())},children:"Embed"})})]}),(0,jsx_runtime.jsx)(LexicalAutoEmbedPlugin.LexicalAutoEmbedPlugin,{embedConfigs:[YoutubeEmbedConfig],onOpenEmbedModalForConfig:currentEmbedConfig=>{setEmbedConfig(currentEmbedConfig),handleModal()},getMenuOptions:(activeEmbedConfig,embedFn,dismissFn)=>[new LexicalAutoEmbedPlugin.AutoEmbedOption("Dismiss",{onSelect:dismissFn}),new LexicalAutoEmbedPlugin.AutoEmbedOption(`Embed ${activeEmbedConfig.contentName}`,{onSelect:embedFn})],menuRenderFn:()=>null})]})};try{CustomAutoEmbedPlugin.displayName="CustomAutoEmbedPlugin",CustomAutoEmbedPlugin.__docgenInfo={description:"",displayName:"CustomAutoEmbedPlugin",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/plugins/CustomAutoEmbedPlugin/CustomAutoEmbedPlugin.tsx#CustomAutoEmbedPlugin"]={docgenInfo:CustomAutoEmbedPlugin.__docgenInfo,name:"CustomAutoEmbedPlugin",path:"packages/react/src/components/Editor/src/plugins/CustomAutoEmbedPlugin/CustomAutoEmbedPlugin.tsx#CustomAutoEmbedPlugin"})}catch(__react_docgen_typescript_loader_error){}const CustomHeadingPlugin=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return(0,react.useEffect)((()=>{editor.registerCommand(FORMAT_HEADING_COMMAND,(payload=>{const selection=(0,Lexical.$getSelection)();return(0,Lexical.$isRangeSelection)(selection)&&(0,LexicalSelection.$setBlocksType)(selection,(()=>(0,LexicalRichText.$createHeadingNode)(payload))),!0}),Lexical.COMMAND_PRIORITY_NORMAL)}),[editor]),null},CustomParagraphPlugin=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return(0,react.useEffect)((()=>{editor.registerCommand(FORMAT_PARAGRAPH_COMMAND,(()=>{const selection=(0,Lexical.$getSelection)();return(0,Lexical.$isRangeSelection)(selection)&&(0,LexicalSelection.$setBlocksType)(selection,(()=>(0,Lexical.$createParagraphNode)())),!0}),Lexical.COMMAND_PRIORITY_NORMAL)}),[editor]),null};var floating_ui_react=__webpack_require__("./node_modules/@floating-ui/react/dist/floating-ui.react.mjs"),floating_ui_dom=__webpack_require__("./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"),floating_ui_core=__webpack_require__("./node_modules/@floating-ui/core/dist/floating-ui.core.mjs");const PopoverEditLink=({linkUrl,handlePopover})=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),[text,setText]=(0,react.useState)(linkUrl),[editLink,setEditLink]=(0,react.useState)(!1);return(0,react.useEffect)((()=>{!text&&linkUrl&&setText(linkUrl)}),[linkUrl,text]),(0,jsx_runtime.jsx)(dist.Box,{backgroundColor:"neutral-background",p:"4",borderRadius:"2",children:(0,jsx_runtime.jsxs)(dist.Box,{children:[!editLink&&(0,jsx_runtime.jsxs)(dist.Box,{display:"flex",gap:"2",children:[(0,jsx_runtime.jsx)(dist.Link,{as:"a",href:linkUrl,target:"_blank",appearance:"primary",children:linkUrl}),(0,jsx_runtime.jsxs)(dist.Box,{display:"flex",gap:"1",children:[(0,jsx_runtime.jsx)(dist.IconButton,{source:(0,jsx_runtime.jsx)(icons_dist.PencilIcon,{size:15}),size:"1.5rem",onClick:()=>setEditLink(!0)}),(0,jsx_runtime.jsx)(dist.IconButton,{source:(0,jsx_runtime.jsx)(icons_dist.TrashIcon,{size:15}),size:"1.5rem",onClick:()=>{editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,null),handlePopover()}})]})]}),editLink&&(0,jsx_runtime.jsxs)(dist.Box,{display:"flex",flexDirection:"column",gap:"2",children:[(0,jsx_runtime.jsx)(FormField.W.Input,{label:"URL",value:text,onChange:e=>{const{value}=e.target;setText(value)}}),(0,jsx_runtime.jsxs)(dist.Box,{display:"flex",gap:"1",justifyContent:"flex-end",children:[(0,jsx_runtime.jsx)(dist.IconButton,{source:(0,jsx_runtime.jsx)(icons_dist.CloseIcon,{size:12}),size:"1.4rem",onClick:()=>{setEditLink(!1),setText(linkUrl)}}),(0,jsx_runtime.jsx)(dist.IconButton,{source:(0,jsx_runtime.jsx)(icons_dist.CheckIcon,{size:12}),size:"1.4rem",disabled:!text.length,onClick:()=>{editor.dispatchCommand(LexicalLink.TOGGLE_LINK_COMMAND,text),handlePopover()}})]})]})]})})};PopoverEditLink.displayName="PopoverEditLink";try{PopoverEditLink.displayName="PopoverEditLink",PopoverEditLink.__docgenInfo={description:"",displayName:"PopoverEditLink",props:{linkUrl:{defaultValue:null,description:"",name:"linkUrl",required:!0,type:{name:"string"}},editLink:{defaultValue:null,description:"",name:"editLink",required:!1,type:{name:"boolean"}},handlePopover:{defaultValue:null,description:"",name:"handlePopover",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/plugins/CustomFloatingLinkEditor/components/PopoverEditLink/PopoverEditLink.tsx#PopoverEditLink"]={docgenInfo:PopoverEditLink.__docgenInfo,name:"PopoverEditLink",path:"packages/react/src/components/Editor/src/plugins/CustomFloatingLinkEditor/components/PopoverEditLink/PopoverEditLink.tsx#PopoverEditLink"})}catch(__react_docgen_typescript_loader_error){}const CustomFloatingLinkEditor=()=>{const ref=(0,react.useRef)(null),{isLink,linkUrl,showPopover,handlePopover}=(()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)(),[isLink,setIsLink]=(0,react.useState)(!1),[linkUrl,setLinkUrl]=(0,react.useState)(""),[showPopover,setShowPopover]=(0,react.useState)(!1),updateToolbar=()=>{const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const node=getSelectedNode(selection),linkParent=(0,LexicalUtils.$findMatchingParent)(node,LexicalLink.$isLinkNode),autoLinkParent=(0,LexicalUtils.$findMatchingParent)(node,LexicalLink.$isAutoLinkNode);null!==linkParent&&null===autoLinkParent?(setIsLink(!0),setLinkUrl(linkParent.__url)):setIsLink(!1)}};return(0,react.useEffect)((()=>(0,LexicalUtils.mergeRegister)(editor.registerUpdateListener((({editorState})=>{editorState.read((()=>{updateToolbar()}))})),editor.registerCommand(Lexical.SELECTION_CHANGE_COMMAND,(()=>(updateToolbar(),!1)),Lexical.COMMAND_PRIORITY_CRITICAL),editor.registerCommand(Lexical.CLICK_COMMAND,(payload=>{const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const node=getSelectedNode(selection),linkNode=(0,LexicalUtils.$findMatchingParent)(node,LexicalLink.$isLinkNode);if((0,LexicalLink.$isLinkNode)(linkNode)&&(payload.metaKey||payload.ctrlKey))return setIsLink(!1),window.open(linkNode.getURL(),"_blank"),!0;(0,LexicalLink.$isLinkNode)(linkNode)&&setShowPopover(!0)}return!1}),Lexical.COMMAND_PRIORITY_LOW))),[editor]),{isLink,linkUrl,showPopover,handlePopover:()=>setShowPopover((prevState=>!prevState))}})(),{floatingStyles}=(0,floating_ui_react.YF)({strategy:"fixed",whileElementsMounted:floating_ui_dom.Me,elements:{floating:ref?.current,reference:window?.getSelection?.()?.focusNode?.parentElement},middleware:[(0,floating_ui_core.uY)(),(0,floating_ui_core.RR)({crossAxis:!0,fallbackAxisSideDirection:"end",padding:5})]});return(0,jsx_runtime.jsx)(floating_ui_react.ll,{id:"nimbus-popover-floating",children:(0,jsx_runtime.jsx)("div",{ref,style:{...floatingStyles,display:isLink?"flex":"none"},className:styles_dist.popover.classnames.content,children:showPopover&&(0,jsx_runtime.jsx)(PopoverEditLink,{linkUrl,handlePopover})})})};CustomFloatingLinkEditor.displayName="CustomFloatingLinkEditor";try{CustomFloatingLinkEditor.displayName="CustomFloatingLinkEditor",CustomFloatingLinkEditor.__docgenInfo={description:"",displayName:"CustomFloatingLinkEditor",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/plugins/CustomFloatingLinkEditor/CustomFloatingLinkEditor.tsx#CustomFloatingLinkEditor"]={docgenInfo:CustomFloatingLinkEditor.__docgenInfo,name:"CustomFloatingLinkEditor",path:"packages/react/src/components/Editor/src/plugins/CustomFloatingLinkEditor/CustomFloatingLinkEditor.tsx#CustomFloatingLinkEditor"})}catch(__react_docgen_typescript_loader_error){}const clearNodeFormatting=node=>{""!==node.__style&&node.setStyle(""),0!==node.__format&&(node.setFormat(0),(0,LexicalUtils.$getNearestBlockElementAncestorOrThrow)(node).setFormat(""))},CustomClearFormattingPlugin=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return(0,react.useEffect)((()=>{editor.registerCommand(CLEAR_FORMATTING_COMMAND,(()=>{const selection=(0,Lexical.$getSelection)();if((0,Lexical.$isRangeSelection)(selection)){const{anchor,focus}=selection,nodes=selection.getNodes();if(((anchor,focus)=>anchor.key===focus.key&&anchor.offset===focus.offset)(anchor,focus))return!0;nodes.forEach(((node,idx)=>{(0,Lexical.$isTextNode)(node)?(0===idx&&0!==anchor.offset&&(node=node.splitText(anchor.offset)[1]||node),idx===nodes.length-1&&(node=node.splitText(focus.offset)[0]||node),clearNodeFormatting(node)):(0,LexicalRichText.$isHeadingNode)(node)||(0,LexicalRichText.$isQuoteNode)(node)?node.replaceWith((0,Lexical.$createParagraphNode)(),!0):(0,LexicalDecoratorBlockNode.$isDecoratorBlockNode)(node)&&clearNodeFormatting(node)}))}return!0}),Lexical.COMMAND_PRIORITY_NORMAL)}),[editor]),null},CustomYouTubePlugin=()=>{const[editor]=(0,LexicalComposerContext.useLexicalComposerContext)();return(0,react.useEffect)((()=>{if(!editor.hasNodes([YouTubeNode_YouTubeNode]))throw new Error("YouTubePlugin: YouTubeNode not registered on editor");return editor.registerCommand(INSERT_YOUTUBE_COMMAND,(payload=>{console.log("payload",payload);const youTubeNode=$createYouTubeNode(payload);return(0,LexicalUtils.$insertNodeToNearestRoot)(youTubeNode),!0}),Lexical.COMMAND_PRIORITY_EDITOR)}),[editor]),null};try{CustomYouTubePlugin.displayName="CustomYouTubePlugin",CustomYouTubePlugin.__docgenInfo={description:"",displayName:"CustomYouTubePlugin",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/plugins/CustomYouTubePlugin/CustomYouTubePlugin.tsx#CustomYouTubePlugin"]={docgenInfo:CustomYouTubePlugin.__docgenInfo,name:"CustomYouTubePlugin",path:"packages/react/src/components/Editor/src/plugins/CustomYouTubePlugin/CustomYouTubePlugin.tsx#CustomYouTubePlugin"})}catch(__react_docgen_typescript_loader_error){}var LexicalHtml=__webpack_require__("./node_modules/@lexical/html/LexicalHtml.js");const parserDOM=new DOMParser,useEditor=({parser,onChange:handleChange})=>{const onChangeHTML=(editorState,editor)=>{const editorContentHtml=editorState.read((()=>(()=>{const root=(0,Lexical.$getRoot)();return root?.getFirstChild?.()?.isEmpty()&&1===root.getChildrenSize()})()?"":(0,LexicalHtml.$generateHtmlFromNodes)(editor)));return handleChange?.(editorContentHtml),editorContentHtml};return{setContent:(editor,value)=>!!value&&("html"===parser?((editor,value)=>{const dom=parserDOM.parseFromString(value,"text/html"),nodes=(0,LexicalHtml.$generateNodesFromDOM)(editor,dom);(0,Lexical.$getRoot)().select(),(0,Lexical.$insertNodes)(nodes)})(editor,value):((editor,value)=>{const state=editor.parseEditorState(value);editor.setEditorState(state)})(editor,value)),onChangeEditor:(editorState,editor)=>"html"===parser?onChangeHTML(editorState,editor):(editorState=>{const editorContentJSON=editorState.toJSON();return handleChange?.(JSON.stringify(editorContentJSON)),editorContentJSON})(editorState),onError:error=>{console.error(error)}}},Editor=({style:_style,className:_className,theme,modules,placeholder,value,parser="json",helpText,helpIcon:IconSrc,appearance="none",translations,onChange,...rest})=>{const{setContent,onChangeEditor,onError}=useEditor({parser,onChange}),initialConfig={namespace:"@nimbus-ds/editor",theme:theme??defaultTheme,editorState:editor=>setContent(editor,value),nodes,onError},context=(0,react.useMemo)((()=>({translations:{...initialTranslationContext.translations,...translations}})),[translations]);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{tabIndex:0,className:styles_dist.editor.classnames.container[editorAppearance[appearance]],...rest,children:(0,jsx_runtime.jsx)(dist.Box,{as:LexicalComposer.LexicalComposer,initialConfig,position:"relative",backgroundColor:"danger-interactive",children:(0,jsx_runtime.jsxs)(TranslateContext.Provider,{value:context,children:[(0,jsx_runtime.jsx)(Toolbar,{className:styles_dist.editor.classnames.toolbar,children:modules??defaultModules.map((defaultModule=>{const Module=aliasModules[defaultModule]??null;return(0,jsx_runtime.jsx)(Module,{},defaultModule)}))}),(0,jsx_runtime.jsx)(dist.Box,{position:"relative",children:(0,jsx_runtime.jsx)(LexicalRichTextPlugin.RichTextPlugin,{contentEditable:(0,jsx_runtime.jsx)(LexicalContentEditable.ContentEditable,{className:styles_dist.editor.classnames.content}),placeholder:(0,jsx_runtime.jsx)(Placeholder,{text:placeholder}),ErrorBoundary:LexicalErrorBoundary_default()})}),(0,jsx_runtime.jsx)(DefaultPlugins,{}),(0,jsx_runtime.jsx)(CustomAutoEmbedPlugin,{}),(0,jsx_runtime.jsx)(CustomHeadingPlugin,{}),(0,jsx_runtime.jsx)(CustomParagraphPlugin,{}),(0,jsx_runtime.jsx)(CustomFloatingLinkEditor,{}),(0,jsx_runtime.jsx)(CustomClearFormattingPlugin,{}),(0,jsx_runtime.jsx)(CustomYouTubePlugin,{}),(0,jsx_runtime.jsx)(LexicalOnChangePlugin.OnChangePlugin,{onChange:(editorState,editor)=>{onChangeEditor(editorState,editor)}})]})})}),helpText&&(0,jsx_runtime.jsx)(dist.Box,{mt:"2",children:(0,jsx_runtime.jsxs)(dist.Box,{display:"inline-flex",gap:"1",children:[IconSrc&&(0,jsx_runtime.jsx)(dist.Icon,{color:helpTextAppearance[appearance],source:(0,jsx_runtime.jsx)(IconSrc,{size:12})}),(0,jsx_runtime.jsx)(dist.Text,{color:helpTextAppearance[appearance],fontSize:"caption",children:helpText})]})})]})};Editor.displayName="Editor";try{Editor.displayName="Editor",Editor.__docgenInfo={description:"",displayName:"Editor",props:{modules:{defaultValue:null,description:"",name:"modules",required:!1,type:{name:"enum",value:[{value:'"bold"'},{value:'"link"'},{value:'"header"'},{value:'"video"'},{value:'"clearFormating"'},{value:'"orderedList"'},{value:'"unorderedList"'},{value:'"history"'},{value:'"italic"'},{value:'"divider"'}]}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string"}},parser:{defaultValue:{value:"json"},description:"",name:"parser",required:!1,type:{name:"enum",value:[{value:'"html"'},{value:'"json"'}]}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"EditorThemeClasses"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((data: string) => void)"}},helpIcon:{defaultValue:null,description:"Icon supporting the help text message.\n@TJS-type React.FC<IconProps>",name:"helpIcon",required:!1,type:{name:"FC<IconProps>"}},helpText:{defaultValue:null,description:"Help text displaying optional hints or validation messages under the field.",name:"helpText",required:!1,type:{name:"string"}},appearance:{defaultValue:{value:"none"},description:"Appearance of the field and help text elements.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"danger"'},{value:'"warning"'},{value:'"success"'}]}},translations:{defaultValue:null,description:"",name:"translations",required:!1,type:{name:"Partial<{ h3: string; h4: string; paragraph: string; embed_youtube_video: string; }>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/Editor/src/Editor.tsx#Editor"]={docgenInfo:Editor.__docgenInfo,name:"Editor",path:"packages/react/src/components/Editor/src/Editor.tsx#Editor"})}catch(__react_docgen_typescript_loader_error){}const editor_stories={title:"Patterns/Editor",component:Editor,tags:["autodocs"]},Basic={args:{}};Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Basic.parameters?.docs?.source}}};const __namedExportsOrder=["Basic"]},"./packages/react/src/components/FormField/src/FormField.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>FormField});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@nimbus-ds/components/dist/index.js");const inputAppearance={danger:"danger",warning:"warning",success:"success",none:"neutral","ai-generative":"ai-generative","ai-generated":"neutral"},helpTextAppearance={danger:"danger-textLow",warning:"warning-textLow",success:"success-textLow",none:"neutral-textDisabled"};var typings_dist=__webpack_require__("./node_modules/@nimbus-ds/typings/dist/index.js");const selectAppearances={danger:"danger",warning:"warning",success:"success",none:"neutral"};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const FormFieldSelect=(0,react.forwardRef)((({label,helpText,helpIcon:IconSrc,appearance="none",showHelpText=!1,...rest},ref)=>{const selectRef=(0,react.useRef)(null);return(0,typings_dist.useRefObjectAsForwardedRef)(ref,selectRef),(0,jsx_runtime.jsx)(FormField,{label,helpText,helpIcon:IconSrc,appearance,showHelpText,id:rest.id,children:(0,jsx_runtime.jsx)(dist.Select,{ref:selectRef,...rest,appearance:selectAppearances[appearance]})})}));try{FormFieldSelect.displayName="FormFieldSelect",FormFieldSelect.__docgenInfo={description:"",displayName:"FormFieldSelect",props:{label:{defaultValue:null,description:"Optional label for the field component.\n@TJS-type React.ReactNode",name:"label",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:{value:"none"},description:"Appearance of the field and help text elements.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"danger"'},{value:'"warning"'},{value:'"success"'}]}},helpText:{defaultValue:null,description:"Help text displaying optional hints or validation messages under the field.",name:"helpText",required:!1,type:{name:"string"}},helpIcon:{defaultValue:null,description:"Icon supporting the help text message.\n@TJS-type React.FC<IconProps>",name:"helpIcon",required:!1,type:{name:"FC<IconProps>"}},showHelpText:{defaultValue:{value:"false"},description:"Control to conditionally show the help text and icon.",name:"showHelpText",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/FormField/src/components/FormFieldSelect/FormFieldSelect.tsx#FormFieldSelect"]={docgenInfo:FormFieldSelect.__docgenInfo,name:"FormFieldSelect",path:"packages/react/src/components/FormField/src/components/FormFieldSelect/FormFieldSelect.tsx#FormFieldSelect"})}catch(__react_docgen_typescript_loader_error){}const textAreaAppearances={danger:"danger",warning:"warning",success:"success",none:"neutral"},FormFieldTextarea=(0,react.forwardRef)((({label,helpText,helpIcon:IconSrc,appearance="none",showHelpText=!1,...rest},ref)=>{const textAreaRef=(0,react.useRef)(null);return(0,typings_dist.useRefObjectAsForwardedRef)(ref,textAreaRef),(0,jsx_runtime.jsx)(FormField,{label,helpText,helpIcon:IconSrc,appearance,showHelpText,id:rest.id,children:(0,jsx_runtime.jsx)(dist.Textarea,{ref:textAreaRef,...rest,appearance:textAreaAppearances[appearance]})})}));try{FormFieldTextarea.displayName="FormFieldTextarea",FormFieldTextarea.__docgenInfo={description:"",displayName:"FormFieldTextarea",props:{label:{defaultValue:null,description:"Optional label for the field component.\n@TJS-type React.ReactNode",name:"label",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:{value:"none"},description:"Appearance of the field and help text elements.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"danger"'},{value:'"warning"'},{value:'"success"'}]}},helpText:{defaultValue:null,description:"Help text displaying optional hints or validation messages under the field.",name:"helpText",required:!1,type:{name:"string"}},helpIcon:{defaultValue:null,description:"Icon supporting the help text message.\n@TJS-type React.FC<IconProps>",name:"helpIcon",required:!1,type:{name:"FC<IconProps>"}},showHelpText:{defaultValue:{value:"false"},description:"Control to conditionally show the help text and icon.",name:"showHelpText",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/FormField/src/components/FormFieldTextarea/FormFieldTextarea.tsx#FormFieldTextarea"]={docgenInfo:FormFieldTextarea.__docgenInfo,name:"FormFieldTextarea",path:"packages/react/src/components/FormField/src/components/FormFieldTextarea/FormFieldTextarea.tsx#FormFieldTextarea"})}catch(__react_docgen_typescript_loader_error){}const FormFieldInput=(0,react.forwardRef)((({label,helpText,helpIcon:IconSrc,appearance="none",showHelpText=!1,...rest},ref)=>{const inputRef=(0,react.useRef)(null);(0,typings_dist.useRefObjectAsForwardedRef)(ref,inputRef);const formFieldAppearance=(0,react.useMemo)((()=>"ai-generative"===appearance?"none":appearance),[appearance]);return(0,jsx_runtime.jsx)(FormField,{label,helpText,helpIcon:IconSrc,appearance:formFieldAppearance,showHelpText,id:rest.id,children:(0,jsx_runtime.jsx)(dist.Input,{ref:inputRef,...rest,appearance:inputAppearance[appearance]})})}));try{FormFieldInput.displayName="FormFieldInput",FormFieldInput.__docgenInfo={description:"",displayName:"FormFieldInput",props:{label:{defaultValue:null,description:"Optional label for the field component.\n@TJS-type React.ReactNode",name:"label",required:!1,type:{name:"ReactNode"}},appearance:{defaultValue:{value:"none"},description:"",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"danger"'},{value:'"neutral"'},{value:'"warning"'},{value:'"success"'},{value:'"ai-generative"'}]}},helpText:{defaultValue:null,description:"Help text displaying optional hints or validation messages under the field.",name:"helpText",required:!1,type:{name:"string"}},helpIcon:{defaultValue:null,description:"Icon supporting the help text message.\n@TJS-type React.FC<IconProps>",name:"helpIcon",required:!1,type:{name:"FC<IconProps>"}},showHelpText:{defaultValue:{value:"false"},description:"Control to conditionally show the help text and icon.",name:"showHelpText",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/FormField/src/components/FormFieldInput/FormFieldInput.tsx#FormFieldInput"]={docgenInfo:FormFieldInput.__docgenInfo,name:"FormFieldInput",path:"packages/react/src/components/FormField/src/components/FormFieldInput/FormFieldInput.tsx#FormFieldInput"})}catch(__react_docgen_typescript_loader_error){}const FormField=({label,helpText,helpIcon:IconSrc,appearance="none",showHelpText=!1,children,...rest})=>(0,jsx_runtime.jsxs)(dist.Box,{display:"flex",flexDirection:"column",gap:"2",width:"100%",children:[label&&(0,jsx_runtime.jsx)(dist.Label,{htmlFor:rest.id,children:label}),children,showHelpText&&(0,jsx_runtime.jsxs)(dist.Box,{display:"inline-flex",gap:"1",children:[IconSrc&&(0,jsx_runtime.jsx)(dist.Icon,{color:helpTextAppearance[appearance],source:(0,jsx_runtime.jsx)(IconSrc,{size:12})}),helpText&&(0,jsx_runtime.jsx)(dist.Text,{color:helpTextAppearance[appearance],fontSize:"caption",children:helpText})]})]});FormField.displayName="FormField",FormField.displayName="FormField",FormField.Select=FormFieldSelect,FormField.Textarea=FormFieldTextarea,FormField.Input=FormFieldInput,FormField.Select.displayName="FormField.Select",FormField.Textarea.displayName="FormField.Textarea",FormField.Input.displayName="FormField.Input";try{FormField.displayName="FormField",FormField.__docgenInfo={description:"",displayName:"FormField",props:{label:{defaultValue:null,description:"Optional label for the field component.\n@TJS-type React.ReactNode",name:"label",required:!1,type:{name:"ReactNode"}},helpText:{defaultValue:null,description:"Help text displaying optional hints or validation messages under the field.",name:"helpText",required:!1,type:{name:"string"}},helpIcon:{defaultValue:null,description:"Icon supporting the help text message.\n@TJS-type React.FC<IconProps>",name:"helpIcon",required:!1,type:{name:"FC<IconProps>"}},appearance:{defaultValue:{value:"none"},description:"Appearance of the field and help text elements.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"danger"'},{value:'"warning"'},{value:'"success"'}]}},showHelpText:{defaultValue:{value:"false"},description:"Control to conditionally show the help text and icon.",name:"showHelpText",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"Content of the field.\n@TJS-type React.ReactNode",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/react/src/components/FormField/src/FormField.tsx#FormField"]={docgenInfo:FormField.__docgenInfo,name:"FormField",path:"packages/react/src/components/FormField/src/FormField.tsx#FormField"})}catch(__react_docgen_typescript_loader_error){}}}]);