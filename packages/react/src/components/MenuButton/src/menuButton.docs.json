{
  "id": "menuButton",
  "name": "MenuButton",
  "totalProps": 6,
  "packageName": "@nimbus-ds/menubutton",
  "version": "1.6.0",
  "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/menu-button",
  "props": [
    {
      "default": "",
      "description": "The underlying element to render â€” either a HTML element name or a React component.",
      "anyOf": [
        {
          "enum": [
            "button",
            "a"
          ],
          "type": "string"
        },
        {
          "type": "React.ElementType"
        }
      ],
      "title": "as",
      "required": false
    },
    {
      "description": "Text label for the button.",
      "type": "string",
      "title": "label",
      "required": true
    },
    {
      "description": "Function executed when clicking the button.",
      "type": "() => void;",
      "title": "onClick",
      "required": false
    },
    {
      "description": "Sets an icon element on the left of the button.",
      "type": "React.FC<IconProps>",
      "title": "startIcon",
      "required": false
    },
    {
      "description": "Sets the state of the button as active/inactive.",
      "type": "boolean",
      "title": "active",
      "required": false
    },
    {
      "description": "Inner components displayed on the right of the button component.",
      "type": "React.ReactNode",
      "title": "children",
      "required": false
    }
  ],
  "subComponents": [
    {
      "name": "MenuButton.Accordion",
      "totalProps": 5,
      "props": [
        {
          "description": "Content of the menu.",
          "type": "React.ReactNode",
          "title": "children",
          "required": true
        },
        {
          "description": "It will be the accordion anchor and can contain all the props available in the MenuButton component's API.",
          "type": "React.ReactNode",
          "title": "menuButton",
          "required": true
        },
        {
          "description": "Required ID used to maintain correct component accessibility, it will be passed on to MenuButtonAccordion's children.",
          "type": "string",
          "title": "contentid",
          "required": true
        },
        {
          "description": "Changes the component usage so that control of open and close is controlled from outside the component.",
          "type": "boolean",
          "title": "open",
          "required": false
        },
        {
          "description": "Sets the state of the button as active/inactive.",
          "type": "boolean",
          "title": "active",
          "required": false
        }
      ]
    }
  ]
}