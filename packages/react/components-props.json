{
  "appShell": {
    "id": "appShell",
    "name": "AppShell",
    "totalProps": 3,
    "packageName": "@nimbus-ds/app-shell",
    "version": "1.4.4",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/app-shell",
    "props": [
      {
        "description": "Content for the body of the application.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      },
      {
        "description": "Optional slot for left sidebar menu.",
        "type": "React.ReactNode",
        "title": "menu",
        "required": false
      },
      {
        "description": "Can be used to control the responsive properties of the AppShell menu so you can change which breakpoint the menu hides under.",
        "type": "object",
        "properties": {
          "display": {
            "description": "The display property sets whether an box is treated as a block or inline element and the layout used for its children,\nsuch as grid or flex.",
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "focus": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "focus"
                  },
                  "focusWithin": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "focusWithin"
                  },
                  "active": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "active"
                  },
                  "hover": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "hover"
                  },
                  "disabled": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "disabled"
                  },
                  "xs": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "xs"
                  },
                  "md": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "md"
                  },
                  "lg": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "lg"
                  },
                  "xl": {
                    "enum": [
                      "block",
                      "flex",
                      "grid",
                      "inline-flex",
                      "inline-grid",
                      "none"
                    ],
                    "type": "string",
                    "title": "xl"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "focus",
                  "focusWithin",
                  "active",
                  "hover",
                  "disabled",
                  "xs",
                  "md",
                  "lg",
                  "xl"
                ]
              },
              {
                "enum": [
                  "block",
                  "flex",
                  "grid",
                  "inline-flex",
                  "inline-grid",
                  "none"
                ],
                "type": "string"
              }
            ],
            "title": "display"
          }
        },
        "additionalProperties": false,
        "propertyOrder": [
          "display"
        ],
        "title": "menuProperties",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "AppShell.Header",
        "totalProps": 2,
        "props": [
          {
            "description": "Optional content for the left-hand-side slot.",
            "type": "React.ReactNode",
            "title": "leftSlot",
            "required": false
          },
          {
            "description": "Optional content for the right-hand-side slot.",
            "type": "React.ReactNode",
            "title": "rightSlot",
            "required": false
          }
        ]
      }
    ]
  },
  "calendar": {
    "id": "calendar",
    "name": "Calendar",
    "totalProps": 3,
    "packageName": "@nimbus-ds/calendar",
    "version": "1.1.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/calendar",
    "props": [
      {
        "description": "Ability to hide the border of the calendar container. Useful for including the calendar inside other components such as Modal, Popover or Card.",
        "default": false,
        "type": "boolean",
        "title": "hideBorder",
        "required": false
      },
      {
        "description": "If true will stick the weekday indicators to the top of the component. Useful for when creating scrolling calendars with a display of >1 months. Only works when property numberOfMonths is set to a number greater than 1.",
        "default": false,
        "type": "boolean",
        "title": "stickyWeekdays",
        "required": false
      },
      {
        "description": "If true the buttons for individual days will span 100% of available width as opposed to the default state where they have a fixed width. Useful for when creating calendars inside containers that are wider than default.",
        "default": false,
        "type": "boolean",
        "title": "fullWidthDays",
        "required": false
      }
    ],
    "subComponents": []
  },
  "calloutCard": {
    "id": "calloutCard",
    "name": "CalloutCard",
    "totalProps": 6,
    "packageName": "@nimbus-ds/callout-card",
    "version": "1.7.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/callout-card",
    "props": [
      {
        "description": "CalloutCard color.",
        "enum": [
          "danger",
          "neutral",
          "primary",
          "success",
          "warning"
        ],
        "type": "string",
        "title": "appearance",
        "required": true
      },
      {
        "description": "The SVG contents to display in the Icon.",
        "type": "React.FC<IconProps>",
        "title": "icon",
        "required": true
      },
      {
        "description": "Title.",
        "type": "string",
        "title": "title",
        "required": true
      },
      {
        "description": "Subtitle.",
        "type": "string",
        "title": "subtitle",
        "required": true
      },
      {
        "description": "Slot intended to position the Callout Card link correctly.",
        "type": "<Link />",
        "title": "link",
        "required": false
      },
      {
        "description": "Event fired when clicking the component.",
        "type": "() => void;",
        "title": "onClick",
        "required": false
      }
    ],
    "subComponents": []
  },
  "dataList": {
    "id": "dataList",
    "name": "DataList",
    "totalProps": 2,
    "packageName": "@nimbus-ds/data-list",
    "version": "1.2.4",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/data-list",
    "props": [
      {
        "description": "Content of the List component.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      },
      {
        "description": "Defines whether the List has a bottom border.",
        "default": true,
        "type": "boolean",
        "title": "bottomDivider",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "DataList.Row",
        "totalProps": 3,
        "props": [
          {
            "description": "Optional padding for the row.",
            "default": "base",
            "enum": [
              "base",
              "none",
              "small"
            ],
            "type": "string",
            "title": "padding",
            "required": false
          },
          {
            "description": "Content of the row.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          },
          {
            "description": "Determines if the row has a top border.",
            "default": true,
            "type": "boolean",
            "title": "topDivider",
            "required": false
          }
        ]
      }
    ]
  },
  "dataTable": {
    "id": "dataTable",
    "name": "DataTable",
    "totalProps": 4,
    "packageName": "@nimbus-ds/data-table",
    "version": "1.2.5",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/data-table",
    "props": [
      {
        "description": "Bulk actions component rendered with a sticky position over the top of the table element.",
        "type": "React.ReactNode",
        "title": "bulkActions",
        "required": false
      },
      {
        "description": "Table header content.",
        "type": "React.ReactNode",
        "title": "header",
        "required": true
      },
      {
        "description": "Optional table footer content.",
        "type": "React.ReactNode",
        "title": "footer",
        "required": false
      },
      {
        "description": "Table body content.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": [
      {
        "name": "DataTable.BulkActions",
        "totalProps": 4,
        "props": [
          {
            "description": "Properties of the checkbox element rendered in the Bulk Actions component.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the input element.",
                "type": "string",
                "title": "name"
              },
              "appearance": {
                "description": "Change the visual style of the checkbox.",
                "default": "neutral",
                "enum": [
                  "danger",
                  "primary"
                ],
                "type": "string",
                "title": "appearance"
              },
              "disabled": {
                "description": "Modifies the native disabled state of the native checkbox.",
                "type": "boolean",
                "title": "disabled"
              },
              "checked": {
                "description": "Modifies true/false value of the native checkbox.",
                "type": "boolean",
                "title": "checked"
              },
              "indeterminate": {
                "description": "If true, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a data-indeterminate attribute on the input.",
                "default": false,
                "type": "boolean",
                "title": "indeterminate"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "name",
              "appearance",
              "disabled",
              "checked",
              "indeterminate"
            ],
            "required": true,
            "title": "checkbox"
          },
          {
            "description": "Optional link element rendered next to the Bulk Actions controller.",
            "type": "<Link />",
            "title": "link",
            "required": false
          },
          {
            "description": "Action component that controls the Bulk Actions.",
            "type": "React.ReactNode",
            "title": "action",
            "required": true
          },
          {
            "description": "Lable for the checkbox element.",
            "type": "string",
            "title": "label",
            "required": true
          }
        ]
      },
      {
        "name": "DataTable.Header",
        "totalProps": 2,
        "props": [
          {
            "description": "Checkbox element rendered on the table header that controls all rows.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the input element.",
                "type": "string",
                "title": "name"
              },
              "appearance": {
                "description": "Change the visual style of the checkbox.",
                "default": "neutral",
                "enum": [
                  "danger",
                  "primary"
                ],
                "type": "string",
                "title": "appearance"
              },
              "checked": {
                "description": "Modifies true/false value of the native checkbox.",
                "type": "boolean",
                "title": "checked"
              },
              "disabled": {
                "description": "Modifies the native disabled state of the native checkbox.",
                "type": "boolean",
                "title": "disabled"
              },
              "indeterminate": {
                "description": "If true, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a data-indeterminate attribute on the input.",
                "default": false,
                "type": "boolean",
                "title": "indeterminate"
              },
              "label": {
                "description": "Text to be rendered inside the component.",
                "type": "string",
                "title": "label"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "name",
              "appearance",
              "checked",
              "disabled",
              "indeterminate",
              "label"
            ],
            "required": true,
            "title": "checkbox"
          },
          {
            "description": "Row content.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      },
      {
        "name": "DataTable.Footer",
        "totalProps": 2,
        "props": [
          {
            "description": "Left-hand side text intended for displaying an item count.",
            "type": "string",
            "title": "itemCount",
            "required": true
          },
          {
            "description": "Pagination element rendered on the right-side of the footer.",
            "type": "object",
            "properties": {
              "activePage": {
                "description": "The currently selected page.",
                "type": "number",
                "title": "activePage"
              },
              "pageCount": {
                "description": "The total number of pages.",
                "type": "number",
                "title": "pageCount"
              },
              "onPageChange": {
                "description": "Called with event and page number when a page is clicked.",
                "type": "(page: number) => void;",
                "title": "onPageChange"
              },
              "showNumbers": {
                "description": "Determines whether page numbers should be shown.",
                "default": true,
                "type": "boolean",
                "title": "showNumbers"
              },
              "renderItem": {
                "description": "Custom render function for pagination items.",
                "type": "object",
                "additionalProperties": false,
                "propertyOrder": [],
                "title": "renderItem"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "activePage",
              "pageCount",
              "onPageChange",
              "showNumbers",
              "renderItem"
            ],
            "required": false,
            "title": "pagination"
          }
        ]
      },
      {
        "name": "DataTable.Row",
        "totalProps": 2,
        "props": [
          {
            "description": "Checkbox element rendered on the row that controls whether the row is selected.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the input element.",
                "type": "string",
                "title": "name"
              },
              "appearance": {
                "description": "Change the visual style of the checkbox.",
                "default": "neutral",
                "enum": [
                  "danger",
                  "primary"
                ],
                "type": "string",
                "title": "appearance"
              },
              "checked": {
                "description": "Modifies true/false value of the native checkbox.",
                "type": "boolean",
                "title": "checked"
              },
              "disabled": {
                "description": "Modifies the native disabled state of the native checkbox.",
                "type": "boolean",
                "title": "disabled"
              },
              "indeterminate": {
                "description": "If true, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a data-indeterminate attribute on the input.",
                "default": false,
                "type": "boolean",
                "title": "indeterminate"
              },
              "label": {
                "description": "Text to be rendered inside the component.",
                "type": "string",
                "title": "label"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "name",
              "appearance",
              "checked",
              "disabled",
              "indeterminate",
              "label"
            ],
            "required": true,
            "title": "checkbox"
          },
          {
            "description": "Content of the row.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      },
      {
        "name": "DataTable.Cell",
        "totalProps": 1,
        "props": [
          {
            "description": "Content of the List component.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      }
    ]
  },
  "editor": {
    "id": "editor",
    "name": "Editor",
    "totalProps": 10,
    "packageName": "@nimbus-ds/editor",
    "version": "1.1.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/editor",
    "props": [
      {
        "enum": [
          "bold",
          "clearFormating",
          "divider",
          "header",
          "history",
          "italic",
          "link",
          "orderedList",
          "unorderedList",
          "video"
        ],
        "type": "string",
        "title": "modules",
        "required": false
      },
      {
        "type": "string",
        "title": "placeholder",
        "required": false
      },
      {
        "type": "string",
        "title": "value",
        "required": false
      },
      {
        "enum": [
          "html",
          "json"
        ],
        "type": "string",
        "title": "parser",
        "required": false
      },
      {
        "type": "object",
        "additionalProperties": {},
        "properties": {
          "blockCursor": {
            "type": "string",
            "title": "blockCursor"
          },
          "characterLimit": {
            "type": "string",
            "title": "characterLimit"
          },
          "code": {
            "type": "string",
            "title": "code"
          },
          "codeHighlight": {
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "codeHighlight"
          },
          "hashtag": {
            "type": "string",
            "title": "hashtag"
          },
          "heading": {
            "type": "object",
            "properties": {
              "h1": {
                "type": "string",
                "title": "h1"
              },
              "h2": {
                "type": "string",
                "title": "h2"
              },
              "h3": {
                "type": "string",
                "title": "h3"
              },
              "h4": {
                "type": "string",
                "title": "h4"
              },
              "h5": {
                "type": "string",
                "title": "h5"
              },
              "h6": {
                "type": "string",
                "title": "h6"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "h6"
            ],
            "title": "heading"
          },
          "image": {
            "type": "string",
            "title": "image"
          },
          "link": {
            "type": "string",
            "title": "link"
          },
          "list": {
            "type": "object",
            "properties": {
              "ul": {
                "type": "string",
                "title": "ul"
              },
              "ulDepth": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "ulDepth"
              },
              "ol": {
                "type": "string",
                "title": "ol"
              },
              "olDepth": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "olDepth"
              },
              "listitem": {
                "type": "string",
                "title": "listitem"
              },
              "listitemChecked": {
                "type": "string",
                "title": "listitemChecked"
              },
              "listitemUnchecked": {
                "type": "string",
                "title": "listitemUnchecked"
              },
              "nested": {
                "type": "object",
                "properties": {
                  "list": {
                    "type": "string",
                    "title": "list"
                  },
                  "listitem": {
                    "type": "string",
                    "title": "listitem"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "list",
                  "listitem"
                ],
                "title": "nested"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "ul",
              "ulDepth",
              "ol",
              "olDepth",
              "listitem",
              "listitemChecked",
              "listitemUnchecked",
              "nested"
            ],
            "title": "list"
          },
          "ltr": {
            "type": "string",
            "title": "ltr"
          },
          "mark": {
            "type": "string",
            "title": "mark"
          },
          "markOverlap": {
            "type": "string",
            "title": "markOverlap"
          },
          "paragraph": {
            "type": "string",
            "title": "paragraph"
          },
          "quote": {
            "type": "string",
            "title": "quote"
          },
          "root": {
            "type": "string",
            "title": "root"
          },
          "rtl": {
            "type": "string",
            "title": "rtl"
          },
          "table": {
            "type": "string",
            "title": "table"
          },
          "tableAddColumns": {
            "type": "string",
            "title": "tableAddColumns"
          },
          "tableAddRows": {
            "type": "string",
            "title": "tableAddRows"
          },
          "tableCellActionButton": {
            "type": "string",
            "title": "tableCellActionButton"
          },
          "tableCellActionButtonContainer": {
            "type": "string",
            "title": "tableCellActionButtonContainer"
          },
          "tableCellPrimarySelected": {
            "type": "string",
            "title": "tableCellPrimarySelected"
          },
          "tableCellSelected": {
            "type": "string",
            "title": "tableCellSelected"
          },
          "tableCell": {
            "type": "string",
            "title": "tableCell"
          },
          "tableCellEditing": {
            "type": "string",
            "title": "tableCellEditing"
          },
          "tableCellHeader": {
            "type": "string",
            "title": "tableCellHeader"
          },
          "tableCellResizer": {
            "type": "string",
            "title": "tableCellResizer"
          },
          "tableCellSortedIndicator": {
            "type": "string",
            "title": "tableCellSortedIndicator"
          },
          "tableResizeRuler": {
            "type": "string",
            "title": "tableResizeRuler"
          },
          "tableRow": {
            "type": "string",
            "title": "tableRow"
          },
          "tableSelected": {
            "type": "string",
            "title": "tableSelected"
          },
          "text": {
            "type": "object",
            "properties": {
              "base": {
                "type": "string",
                "title": "base"
              },
              "bold": {
                "type": "string",
                "title": "bold"
              },
              "code": {
                "type": "string",
                "title": "code"
              },
              "highlight": {
                "type": "string",
                "title": "highlight"
              },
              "italic": {
                "type": "string",
                "title": "italic"
              },
              "strikethrough": {
                "type": "string",
                "title": "strikethrough"
              },
              "subscript": {
                "type": "string",
                "title": "subscript"
              },
              "superscript": {
                "type": "string",
                "title": "superscript"
              },
              "underline": {
                "type": "string",
                "title": "underline"
              },
              "underlineStrikethrough": {
                "type": "string",
                "title": "underlineStrikethrough"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "base",
              "bold",
              "code",
              "highlight",
              "italic",
              "strikethrough",
              "subscript",
              "superscript",
              "underline",
              "underlineStrikethrough"
            ],
            "title": "text"
          },
          "embedBlock": {
            "type": "object",
            "properties": {
              "base": {
                "type": "string",
                "title": "base"
              },
              "focus": {
                "type": "string",
                "title": "focus"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "base",
              "focus"
            ],
            "title": "embedBlock"
          },
          "indent": {
            "type": "string",
            "title": "indent"
          }
        },
        "propertyOrder": [
          "blockCursor",
          "characterLimit",
          "code",
          "codeHighlight",
          "hashtag",
          "heading",
          "image",
          "link",
          "list",
          "ltr",
          "mark",
          "markOverlap",
          "paragraph",
          "quote",
          "root",
          "rtl",
          "table",
          "tableAddColumns",
          "tableAddRows",
          "tableCellActionButton",
          "tableCellActionButtonContainer",
          "tableCellPrimarySelected",
          "tableCellSelected",
          "tableCell",
          "tableCellEditing",
          "tableCellHeader",
          "tableCellResizer",
          "tableCellSortedIndicator",
          "tableResizeRuler",
          "tableRow",
          "tableSelected",
          "text",
          "embedBlock",
          "indent"
        ],
        "title": "theme",
        "required": false
      },
      {
        "type": "object",
        "additionalProperties": false,
        "propertyOrder": [],
        "title": "onChange",
        "required": false
      },
      {
        "description": "Icon supporting the help text message.",
        "type": "React.FC<IconProps>",
        "title": "helpIcon",
        "required": false
      },
      {
        "description": "Help text displaying optional hints or validation messages under the field.",
        "type": "string",
        "title": "helpText",
        "required": false
      },
      {
        "description": "Appearance of the field and help text elements.",
        "default": "none",
        "enum": [
          "danger",
          "none",
          "success",
          "warning"
        ],
        "type": "string",
        "title": "appearance",
        "required": false
      },
      {
        "type": "object",
        "properties": {
          "h3": {
            "type": "string",
            "title": "h3"
          },
          "h4": {
            "type": "string",
            "title": "h4"
          },
          "paragraph": {
            "type": "string",
            "title": "paragraph"
          },
          "embed_youtube_video": {
            "type": "string",
            "title": "embed_youtube_video"
          }
        },
        "additionalProperties": false,
        "propertyOrder": [
          "h3",
          "h4",
          "paragraph",
          "embed_youtube_video"
        ],
        "title": "translations",
        "required": false
      }
    ],
    "subComponents": []
  },
  "emptyApp": {
    "id": "emptyApp",
    "name": "EmptyApp",
    "totalProps": 1,
    "packageName": "@nimbus-ds/empty-app",
    "version": "1.0.2",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/empty-app",
    "props": [
      {
        "description": "Content of the EmptyApp",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": [
      {
        "name": "EmptyApp.ContentImageElement",
        "totalProps": 2,
        "props": [
          {
            "description": "The required alt attribute specifies an alternate text for an image, if the image cannot be displayed.",
            "type": "string",
            "title": "alt",
            "required": true
          },
          {
            "type": "string",
            "title": "src",
            "required": false
          }
        ]
      },
      {
        "name": "EmptyApp.ContentSection",
        "totalProps": 4,
        "props": [
          {
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "type": "string",
            "title": "subtitle",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "actions",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "EmptyApp.ContentTextElement",
        "totalProps": 3,
        "props": [
          {
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "type": "string",
            "title": "content",
            "required": true
          },
          {
            "type": "boolean",
            "title": "bottomDivider",
            "required": false
          }
        ]
      },
      {
        "name": "EmptyApp.HeroSection",
        "totalProps": 7,
        "props": [
          {
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "titleChildren",
            "required": false
          },
          {
            "type": "string",
            "title": "subtitle",
            "required": false
          },
          {
            "type": "string",
            "title": "content",
            "required": true
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "actions",
            "required": false
          },
          {
            "description": "The required alt attribute specifies an alternate text for an image, if the image cannot be displayed.",
            "type": "string",
            "title": "alt",
            "required": true
          },
          {
            "type": "string",
            "title": "src",
            "required": false
          }
        ]
      },
      {
        "name": "EmptyApp.PlanCard",
        "totalProps": 3,
        "props": [
          {
            "type": "string",
            "title": "planContext",
            "required": true
          },
          {
            "type": "string",
            "title": "planName",
            "required": true
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "EmptyApp.PlanItem",
        "totalProps": 2,
        "props": [
          {
            "type": "string",
            "title": "label",
            "required": true
          },
          {
            "type": "boolean",
            "title": "disabled",
            "required": false
          }
        ]
      }
    ]
  },
  "emptyMessage": {
    "id": "emptyMessage",
    "name": "EmptyMessage",
    "totalProps": 5,
    "packageName": "@nimbus-ds/empty-message",
    "version": "1.2.4",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/empty-message",
    "props": [
      {
        "description": "Optional node that contains an illustration for the component. Will stack vertically on mobile and horizontally on desktop.",
        "type": "React.ReactNode",
        "title": "illustration",
        "required": false
      },
      {
        "description": "Optional icon to display on top of the text.",
        "type": "React.ReactNode",
        "title": "icon",
        "required": false
      },
      {
        "description": "Title of the component.",
        "type": "string",
        "title": "title",
        "required": true
      },
      {
        "description": "Optional content text for additional context.",
        "type": "string",
        "title": "text",
        "required": false
      },
      {
        "description": "Optional node to showcase buttons or actions.",
        "type": "React.ReactNode",
        "title": "actions",
        "required": false
      }
    ],
    "subComponents": []
  },
  "formField": {
    "id": "formField",
    "name": "FormField",
    "totalProps": 6,
    "packageName": "@nimbus-ds/formfield",
    "version": "1.7.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/form-field",
    "props": [
      {
        "description": "Optional label for the field component.",
        "type": "React.ReactNode",
        "title": "label",
        "required": false
      },
      {
        "description": "Help text displaying optional hints or validation messages under the field.",
        "type": "string",
        "title": "helpText",
        "required": false
      },
      {
        "description": "Icon supporting the help text message.",
        "type": "React.FC<IconProps>",
        "title": "helpIcon",
        "required": false
      },
      {
        "description": "Appearance of the field and help text elements.",
        "default": "none",
        "enum": [
          "danger",
          "none",
          "success",
          "warning"
        ],
        "type": "string",
        "title": "appearance",
        "required": false
      },
      {
        "description": "Control to conditionally show the help text and icon.",
        "default": false,
        "type": "boolean",
        "title": "showHelpText",
        "required": false
      },
      {
        "description": "Content of the field.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": [
      {
        "name": "FormField.Select",
        "totalProps": 8,
        "props": [
          {
            "description": "Appearance of the field and help text elements.",
            "default": "none",
            "enum": [
              "danger",
              "none",
              "success",
              "warning"
            ],
            "type": "string",
            "title": "appearance",
            "required": false
          },
          {
            "description": "Optional label for the field component.",
            "type": "React.ReactNode",
            "title": "label",
            "required": false
          },
          {
            "description": "Help text displaying optional hints or validation messages under the field.",
            "type": "string",
            "title": "helpText",
            "required": false
          },
          {
            "description": "Icon supporting the help text message.",
            "type": "React.FC<IconProps>",
            "title": "helpIcon",
            "required": false
          },
          {
            "description": "Control to conditionally show the help text and icon.",
            "default": false,
            "type": "boolean",
            "title": "showHelpText",
            "required": false
          },
          {
            "description": "The id of the wrapper element or the select element when native.",
            "type": "string",
            "title": "id",
            "required": true
          },
          {
            "description": "The name of the wrapper element or the select element when native.",
            "type": "string",
            "title": "name",
            "required": true
          },
          {
            "description": "The content of the select.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      },
      {
        "name": "FormField.Textarea",
        "totalProps": 7,
        "props": [
          {
            "description": "Appearance of the field and help text elements.",
            "default": "none",
            "enum": [
              "danger",
              "none",
              "success",
              "warning"
            ],
            "type": "string",
            "title": "appearance",
            "required": false
          },
          {
            "description": "Optional label for the field component.",
            "type": "React.ReactNode",
            "title": "label",
            "required": false
          },
          {
            "description": "Help text displaying optional hints or validation messages under the field.",
            "type": "string",
            "title": "helpText",
            "required": false
          },
          {
            "description": "Icon supporting the help text message.",
            "type": "React.FC<IconProps>",
            "title": "helpIcon",
            "required": false
          },
          {
            "description": "Control to conditionally show the help text and icon.",
            "default": false,
            "type": "boolean",
            "title": "showHelpText",
            "required": false
          },
          {
            "description": "ID of the textarea",
            "type": "string",
            "title": "id",
            "required": true
          },
          {
            "description": "Number of lines to be rendered for the user to input text",
            "default": 2,
            "type": "number",
            "title": "lines",
            "required": false
          }
        ]
      },
      {
        "name": "FormField.Input",
        "totalProps": 9,
        "props": [
          {
            "description": "Appearance of the field and help text elements.",
            "default": "none",
            "enum": [
              "danger",
              "none",
              "success",
              "warning"
            ],
            "type": "string",
            "title": "appearance",
            "required": false
          },
          {
            "description": "Optional label for the field component.",
            "type": "React.ReactNode",
            "title": "label",
            "required": false
          },
          {
            "description": "Help text displaying optional hints or validation messages under the field.",
            "type": "string",
            "title": "helpText",
            "required": false
          },
          {
            "description": "Icon supporting the help text message.",
            "type": "React.FC<IconProps>",
            "title": "helpIcon",
            "required": false
          },
          {
            "description": "Control to conditionally show the help text and icon.",
            "default": false,
            "type": "boolean",
            "title": "showHelpText",
            "required": false
          },
          {
            "description": "SVG icon to be displayed on input.",
            "type": "React.ReactNode",
            "title": "append",
            "required": false
          },
          {
            "description": "Disables the input, disallowing user interaction.",
            "type": "boolean",
            "title": "disabled",
            "required": false
          },
          {
            "description": "This is an attribute used to identify a DOM node for testing purposes.",
            "type": "string",
            "title": "data-testid",
            "required": false
          },
          {
            "description": "Sent icon display position",
            "default": "start",
            "enum": [
              "end",
              "start"
            ],
            "type": "string",
            "title": "appendPosition",
            "required": false
          }
        ]
      }
    ]
  },
  "helpLink": {
    "id": "helpLink",
    "name": "HelpLink",
    "totalProps": 1,
    "packageName": "@nimbus-ds/help-link",
    "version": "1.1.3",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/help-link",
    "props": [
      {
        "description": "Content to be rendered inside the HelpLink component.",
        "type": "ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": []
  },
  "initialScreen": {
    "id": "initialScreen",
    "name": "InitialScreen",
    "totalProps": 1,
    "packageName": "@nimbus-ds/initial-screen",
    "version": "1.0.2",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/initial-screen",
    "props": [
      {
        "description": "Content of the InitialScreen component.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": [
      {
        "name": "InitialScreen.Bullet",
        "totalProps": 2,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "icon",
            "required": false
          },
          {
            "type": "string",
            "title": "text",
            "required": true
          }
        ]
      },
      {
        "name": "InitialScreen.Card",
        "totalProps": 3,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "icon",
            "required": false
          },
          {
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "type": "string",
            "title": "description",
            "required": true
          }
        ]
      },
      {
        "name": "InitialScreen.CardLayout",
        "totalProps": 1,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InitialScreen.Feature",
        "totalProps": 2,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "content",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "image",
            "required": false
          }
        ]
      },
      {
        "name": "InitialScreen.FeatureItem",
        "totalProps": 3,
        "props": [
          {
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "type": "string",
            "title": "description",
            "required": true
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InitialScreen.FeatureItemSpacing",
        "totalProps": 0,
        "props": []
      },
      {
        "name": "InitialScreen.Hero",
        "totalProps": 6,
        "props": [
          {
            "type": "string",
            "title": "title",
            "required": false
          },
          {
            "type": "string",
            "title": "subtitle",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "actions",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "image",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "description",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "bullets",
            "required": false
          }
        ]
      },
      {
        "name": "InitialScreen.Module",
        "totalProps": 2,
        "props": [
          {
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "type": "string",
            "title": "description",
            "required": true
          }
        ]
      },
      {
        "name": "InitialScreen.Section",
        "totalProps": 1,
        "props": [
          {
            "type": "string",
            "title": "title",
            "required": true
          }
        ]
      }
    ]
  },
  "interactiveList": {
    "id": "interactiveList",
    "name": "InteractiveList",
    "totalProps": 2,
    "packageName": "@nimbus-ds/interactive-list",
    "version": "1.3.6",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/interactive-list",
    "props": [
      {
        "$ref": "#/definitions/React.ReactNode",
        "title": "children",
        "required": false
      },
      {
        "description": "Defines whether the List has a bottom border.",
        "default": true,
        "type": "boolean",
        "title": "bottomDivider",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "InteractiveList.Structure",
        "totalProps": 4,
        "props": [
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.ButtonItem",
        "totalProps": 5,
        "props": [
          {
            "description": "Button props inherited from Nimbus components",
            "type": "object",
            "properties": {
              "as": {
                "description": "Type of html tag to create for the Icon Button component.",
                "default": "button",
                "enum": [
                  "button",
                  "div"
                ],
                "type": "string",
                "title": "as"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "as"
            ],
            "title": "iconButton",
            "required": true
          },
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.CheckboxItem",
        "totalProps": 5,
        "props": [
          {
            "description": "Checkbox props inherited from Nimbus components.",
            "title": "checkbox",
            "required": true
          },
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.RadioItem",
        "totalProps": 5,
        "props": [
          {
            "description": "Radio props inherited from Nimbus components.",
            "title": "radio",
            "required": true
          },
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.ToggleItem",
        "totalProps": 5,
        "props": [
          {
            "description": "Toggle props inherited from Nimbus components.",
            "title": "toggle",
            "required": true
          },
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.StructureSkeleton",
        "totalProps": 4,
        "props": [
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.ButtonItemSkeleton",
        "totalProps": 4,
        "props": [
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.CheckboxItemSkeleton",
        "totalProps": 4,
        "props": [
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.RadioItemSkeleton",
        "totalProps": 4,
        "props": [
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "InteractiveList.ToggleItemSkeleton",
        "totalProps": 5,
        "props": [
          {
            "description": "Toggle props inherited from Nimbus components.",
            "title": "toggle",
            "required": true
          },
          {
            "description": "Title of the list item element. Also used to generate the ID for the interactive element.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Determines if the title is visible or not.",
            "type": "boolean",
            "title": "showTitle",
            "required": false
          },
          {
            "description": "Description of the list item element.",
            "type": "string",
            "title": "description",
            "required": false
          },
          {
            "description": "Custom content for the list item element.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      }
    ]
  },
  "layout": {
    "id": "layout",
    "name": "Layout",
    "totalProps": 2,
    "packageName": "@nimbus-ds/layout",
    "version": "1.3.4",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/layout",
    "props": [
      {
        "description": "Content to be rendered inside the layout.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      },
      {
        "description": "Number of columns to be rendered for the children.",
        "enum": [
          "1",
          "2 - asymmetric",
          "2 - symmetric",
          "3"
        ],
        "type": "string",
        "title": "columns",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "Layout.Section",
        "totalProps": 1,
        "props": [
          {
            "description": "Content of the section body.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      }
    ]
  },
  "menu": {
    "id": "menu",
    "name": "Menu",
    "totalProps": 1,
    "packageName": "@nimbus-ds/menu",
    "version": "1.5.6",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/menu",
    "props": [
      {
        "description": "Content of the menu.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": [
      {
        "name": "Menu.Section",
        "totalProps": 2,
        "props": [
          {
            "description": "Optional title of the section.",
            "type": "string",
            "title": "title",
            "required": false
          },
          {
            "description": "Content of the menu section.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      },
      {
        "name": "Menu.Header",
        "totalProps": 1,
        "props": [
          {
            "description": "Content of the menu header.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      },
      {
        "name": "Menu.Body",
        "totalProps": 1,
        "props": [
          {
            "description": "Content of the menu body.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      },
      {
        "name": "Menu.Footer",
        "totalProps": 4,
        "props": [
          {
            "description": "Sets the state of the button as active/inactive.",
            "type": "boolean",
            "title": "active",
            "required": false
          },
          {
            "description": "Text label for the button.",
            "type": "string",
            "title": "label",
            "required": true
          },
          {
            "description": "Function executed when clicking the button.",
            "type": "() => void;",
            "title": "onClick",
            "required": false
          },
          {
            "description": "Sets an icon element on the left of the button.",
            "type": "React.FC<IconProps>",
            "title": "startIcon",
            "required": false
          }
        ]
      }
    ]
  },
  "menuButton": {
    "id": "menuButton",
    "name": "MenuButton",
    "totalProps": 6,
    "packageName": "@nimbus-ds/menubutton",
    "version": "1.6.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/menu-button",
    "props": [
      {
        "default": "",
        "description": "The underlying element to render — either a HTML element name or a React component.",
        "anyOf": [
          {
            "enum": [
              "button",
              "a"
            ],
            "type": "string"
          },
          {
            "type": "React.ElementType"
          }
        ],
        "title": "as",
        "required": false
      },
      {
        "description": "Text label for the button.",
        "type": "string",
        "title": "label",
        "required": true
      },
      {
        "description": "Function executed when clicking the button.",
        "type": "() => void;",
        "title": "onClick",
        "required": false
      },
      {
        "description": "Sets an icon element on the left of the button.",
        "type": "React.FC<IconProps>",
        "title": "startIcon",
        "required": false
      },
      {
        "description": "Sets the state of the button as active/inactive.",
        "type": "boolean",
        "title": "active",
        "required": false
      },
      {
        "description": "Inner components displayed on the right of the button component.",
        "type": "React.ReactNode",
        "title": "children",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "MenuButton.Accordion",
        "totalProps": 5,
        "props": [
          {
            "description": "Content of the menu.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          },
          {
            "description": "It will be the accordion anchor and can contain all the props available in the MenuButton component's API.",
            "type": "React.ReactNode",
            "title": "menuButton",
            "required": true
          },
          {
            "description": "Required ID used to maintain correct component accessibility, it will be passed on to MenuButtonAccordion's children.",
            "type": "string",
            "title": "contentid",
            "required": true
          },
          {
            "description": "Changes the component usage so that control of open and close is controlled from outside the component.",
            "type": "boolean",
            "title": "open",
            "required": false
          },
          {
            "description": "Sets the state of the button as active/inactive.",
            "type": "boolean",
            "title": "active",
            "required": false
          }
        ]
      }
    ]
  },
  "navTabs": {
    "id": "navTabs",
    "name": "NavTabs",
    "totalProps": 1,
    "packageName": "@nimbus-ds/nav-tabs",
    "version": "1.3.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/nav-tabs",
    "props": [
      {
        "description": "Content to be rendered inside the Nav element.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": [
      {
        "name": "NavTabs.Item",
        "totalProps": 5,
        "props": [
          {
            "description": "Icon element to be rendered inside the button.",
            "type": "React.ReactNode",
            "title": "icon",
            "required": true
          },
          {
            "description": "Controls whether the button is active or not.",
            "type": "boolean",
            "title": "active",
            "required": false
          },
          {
            "description": "Displays a small badge on top of the button.",
            "type": "boolean",
            "title": "badge",
            "required": false
          },
          {
            "description": "Function executed on click.",
            "type": "onClick: () => void;",
            "title": "onClick",
            "required": true
          },
          {
            "description": "Text label used for accessibility.",
            "type": "string",
            "title": "ariaLabel",
            "required": true
          }
        ]
      }
    ]
  },
  "page": {
    "id": "page",
    "name": "Page",
    "totalProps": 2,
    "packageName": "@nimbus-ds/page",
    "version": "1.3.4",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/page",
    "props": [
      {
        "type": "string",
        "title": "maxWidth",
        "required": false
      },
      {
        "$ref": "#/definitions/React.ReactNode",
        "title": "children",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "Page.Header",
        "totalProps": 4,
        "props": [
          {
            "description": "Main title of the page. Corresponds to an h1 HTML tag.",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "Optional subtitle for the page.",
            "type": "string",
            "title": "subtitle",
            "required": false
          },
          {
            "description": "Button stack that appears on the right-hand side of the title.",
            "type": "React.ReactNode",
            "title": "buttonStack",
            "required": false
          },
          {
            "description": "Optional header content that appears underneath the title and button stack.",
            "type": "React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "Page.Body",
        "totalProps": 1,
        "props": [
          {
            "description": "Content of the page body.",
            "type": "React.ReactNode",
            "title": "children",
            "required": true
          }
        ]
      }
    ]
  },
  "planDisplay": {
    "id": "planDisplay",
    "name": "PlanDisplay",
    "totalProps": 2,
    "packageName": "@nimbus-ds/plan-display",
    "version": "1.0.4",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/plan-display",
    "props": [
      {
        "type": "string",
        "title": "minPlanWidth",
        "required": false
      },
      {
        "description": "Content of the PlanDisplay",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      }
    ],
    "subComponents": [
      {
        "name": "PlanDisplay.Card",
        "totalProps": 1,
        "props": [
          {
            "type": "boolean",
            "title": "highlighted",
            "required": false
          }
        ]
      },
      {
        "name": "PlanDisplay.Bullet",
        "totalProps": 2,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "icon",
            "required": false
          },
          {
            "type": "boolean",
            "title": "disabled",
            "required": false
          }
        ]
      },
      {
        "name": "PlanDisplay.CardHeader",
        "totalProps": 2,
        "props": [
          {
            "type": "string",
            "title": "subtitle",
            "required": true
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "title",
            "required": false
          }
        ]
      },
      {
        "name": "PlanDisplay.CardContent",
        "totalProps": 1,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "PlanDisplay.CardSpacing",
        "totalProps": 0,
        "props": []
      }
    ]
  },
  "productDataList": {
    "id": "productDataList",
    "name": "ProductDataList",
    "totalProps": 2,
    "packageName": "@nimbus-ds/product-data-list",
    "version": "0.0.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/product-data-list",
    "props": [
      {
        "$ref": "#/definitions/React.ReactNode",
        "description": "The content to be rendered inside the list",
        "title": "children",
        "required": false
      },
      {
        "$ref": "#/definitions/React.ReactNode",
        "description": "Optional title for the list section",
        "title": "title",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "ProductDataList.Item",
        "totalProps": 8,
        "props": [
          {
            "description": "The id of the product",
            "type": "string",
            "title": "id",
            "required": true
          },
          {
            "description": "The title of the product",
            "type": "string",
            "title": "title",
            "required": true
          },
          {
            "description": "The image URL of the product",
            "type": "string",
            "title": "imageUrl",
            "required": false
          },
          {
            "description": "Alternative text for the product image",
            "type": "string",
            "title": "imageAlt",
            "required": false
          },
          {
            "description": "Whether the item is draggable",
            "type": "boolean",
            "title": "isDraggable",
            "required": false
          },
          {
            "description": "Callback fired when remove button is clicked",
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "onRemove",
            "required": false
          },
          {
            "description": "Whether the item has a divider",
            "type": "boolean",
            "title": "withDivider",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "description": "Additional content to be rendered",
            "title": "children",
            "required": false
          }
        ]
      },
      {
        "name": "ProductDataList.Products",
        "totalProps": 5,
        "props": [
          {
            "description": "The array of items to be rendered and sorted in the list.",
            "type": "array",
            "items": {
              "description": "- The type of each sortable item in the list",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique identifier for the sortable item",
                  "type": [
                    "string",
                    "number"
                  ],
                  "title": "id"
                }
              },
              "additionalProperties": false,
              "propertyOrder": [
                "id"
              ],
              "required": [
                "id"
              ]
            },
            "title": "items",
            "required": true
          },
          {
            "description": "Callback fired when the order of items changes.",
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "onReorder",
            "required": true
          },
          {
            "description": "If true, enables drag-and-drop sorting for the list items.",
            "default": false,
            "type": "boolean",
            "title": "sortable",
            "required": false
          },
          {
            "description": "Function to render each item in the list.",
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "renderItem",
            "required": true
          },
          {
            "description": "Additional properties to pass to the sortable container.",
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "title": "sortableProps",
            "required": false
          }
        ]
      },
      {
        "name": "ProductDataList.ItemDivider",
        "totalProps": 6,
        "props": [
          {
            "type": "string",
            "title": "id",
            "required": false
          },
          {
            "description": "The width property specifies the width of a box's content area.",
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "focus": {
                    "type": "string",
                    "title": "focus"
                  },
                  "focusWithin": {
                    "type": "string",
                    "title": "focusWithin"
                  },
                  "active": {
                    "type": "string",
                    "title": "active"
                  },
                  "hover": {
                    "type": "string",
                    "title": "hover"
                  },
                  "disabled": {
                    "type": "string",
                    "title": "disabled"
                  },
                  "xs": {
                    "type": "string",
                    "title": "xs"
                  },
                  "md": {
                    "type": "string",
                    "title": "md"
                  },
                  "lg": {
                    "type": "string",
                    "title": "lg"
                  },
                  "xl": {
                    "type": "string",
                    "title": "xl"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "focus",
                  "focusWithin",
                  "active",
                  "hover",
                  "disabled",
                  "xs",
                  "md",
                  "lg",
                  "xl"
                ]
              },
              {
                "type": "string"
              }
            ],
            "title": "width",
            "required": false
          },
          {
            "description": "The borderBottomWidth property defines the width of the border at the bottom of a box.",
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "focus": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "focus"
                  },
                  "focusWithin": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "focusWithin"
                  },
                  "active": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "active"
                  },
                  "hover": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "hover"
                  },
                  "disabled": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "disabled"
                  },
                  "xs": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "xs"
                  },
                  "md": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "md"
                  },
                  "lg": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "lg"
                  },
                  "xl": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "xl"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "focus",
                  "focusWithin",
                  "active",
                  "hover",
                  "disabled",
                  "xs",
                  "md",
                  "lg",
                  "xl"
                ]
              },
              {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "none"
                ],
                "type": "string"
              }
            ],
            "title": "borderBottomWidth",
            "required": false
          },
          {
            "description": "The borderColor property sets the color of the box's four borders.",
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "focus": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "focus"
                  },
                  "focusWithin": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "focusWithin"
                  },
                  "active": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "active"
                  },
                  "hover": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "hover"
                  },
                  "disabled": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "disabled"
                  },
                  "xs": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "xs"
                  },
                  "md": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "md"
                  },
                  "lg": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "lg"
                  },
                  "xl": {
                    "enum": [
                      "danger-interactive",
                      "danger-surface",
                      "danger-surfaceHighlight",
                      "neutral-interactive",
                      "neutral-surface",
                      "neutral-surfaceDisabled",
                      "neutral-surfaceHighlight",
                      "primary-interactive",
                      "primary-surface",
                      "primary-surfaceHighlight",
                      "success-interactive",
                      "success-surface",
                      "success-surfaceHighlight",
                      "transparent",
                      "warning-interactive",
                      "warning-surface",
                      "warning-surfaceHighlight"
                    ],
                    "type": "string",
                    "title": "xl"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "focus",
                  "focusWithin",
                  "active",
                  "hover",
                  "disabled",
                  "xs",
                  "md",
                  "lg",
                  "xl"
                ]
              },
              {
                "enum": [
                  "danger-interactive",
                  "danger-surface",
                  "danger-surfaceHighlight",
                  "neutral-interactive",
                  "neutral-surface",
                  "neutral-surfaceDisabled",
                  "neutral-surfaceHighlight",
                  "primary-interactive",
                  "primary-surface",
                  "primary-surfaceHighlight",
                  "success-interactive",
                  "success-surface",
                  "success-surfaceHighlight",
                  "transparent",
                  "warning-interactive",
                  "warning-surface",
                  "warning-surfaceHighlight"
                ],
                "type": "string"
              }
            ],
            "title": "borderColor",
            "required": false
          },
          {
            "description": "borderStyle property sets the line style for all four sides of an box's border.",
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "focus": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "focus"
                  },
                  "focusWithin": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "focusWithin"
                  },
                  "active": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "active"
                  },
                  "hover": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "hover"
                  },
                  "disabled": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "disabled"
                  },
                  "xs": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "xs"
                  },
                  "md": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "md"
                  },
                  "lg": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "lg"
                  },
                  "xl": {
                    "enum": [
                      "dashed",
                      "dotted",
                      "hidden",
                      "none",
                      "solid"
                    ],
                    "type": "string",
                    "title": "xl"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "focus",
                  "focusWithin",
                  "active",
                  "hover",
                  "disabled",
                  "xs",
                  "md",
                  "lg",
                  "xl"
                ]
              },
              {
                "enum": [
                  "dashed",
                  "dotted",
                  "hidden",
                  "none",
                  "solid"
                ],
                "type": "string"
              }
            ],
            "title": "borderStyle",
            "required": false
          },
          {
            "description": "The borderTopWidth property defines the width of the border at the top of a box.",
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "focus": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "focus"
                  },
                  "focusWithin": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "focusWithin"
                  },
                  "active": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "active"
                  },
                  "hover": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "hover"
                  },
                  "disabled": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "disabled"
                  },
                  "xs": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "xs"
                  },
                  "md": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "md"
                  },
                  "lg": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "lg"
                  },
                  "xl": {
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "none"
                    ],
                    "type": "string",
                    "title": "xl"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "focus",
                  "focusWithin",
                  "active",
                  "hover",
                  "disabled",
                  "xs",
                  "md",
                  "lg",
                  "xl"
                ]
              },
              {
                "enum": [
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "none"
                ],
                "type": "string"
              }
            ],
            "title": "borderTopWidth",
            "required": false
          }
        ]
      },
      {
        "name": "ProductDataList.Section",
        "totalProps": 5,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "title",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "description",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "content",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "link",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "title": "children",
            "required": false
          }
        ]
      }
    ]
  },
  "productUpdates": {
    "id": "productUpdates",
    "name": "ProductUpdates",
    "totalProps": 20,
    "packageName": "@nimbus-ds/productupdates",
    "version": "1.5.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/product-updates",
    "props": [
      {
        "description": "Title of the Popover.",
        "type": "string",
        "title": "title",
        "required": true
      },
      {
        "description": "Content text of the Popover.",
        "type": "string",
        "title": "text",
        "required": true
      },
      {
        "description": "Optional content for the body of the Popover.",
        "type": "React.ReactNode",
        "title": "bodyContent",
        "required": false
      },
      {
        "description": "Optional bottom link to dismiss the Popover. If unset, an IconButton with an X will appear on the superior right corner.",
        "type": "React.ReactNode",
        "title": "dismissLink",
        "required": false
      },
      {
        "description": "Offest displaces the floating element from its core placement along the specified axes.",
        "default": 10,
        "type": "number",
        "title": "offset",
        "required": false
      },
      {
        "description": "The height property specifies the height of a popover's content area.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "type": "string",
                "title": "xs"
              },
              "md": {
                "type": "string",
                "title": "md"
              },
              "lg": {
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "type": "string"
          }
        ],
        "title": "height",
        "required": false
      },
      {
        "description": "The width property specifies the width of a popover's content area.",
        "default": "fit-content",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "type": "string",
                "title": "xs"
              },
              "md": {
                "type": "string",
                "title": "md"
              },
              "lg": {
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "type": "string"
          }
        ],
        "title": "width",
        "required": false
      },
      {
        "description": "The backgroundColor property sets the background color of the popover.",
        "default": "neutral-background",
        "examples": "[\"neutral-interactive\", { xs: \"neutral-surface\", md: \"neutral-interactive\" }]",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "xs"
              },
              "md": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "md"
              },
              "lg": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "enum": [
              "danger-surfaceHighlight",
              "neutral-background",
              "neutral-surfaceHighlight",
              "primary-interactiveHover",
              "primary-surfaceHighlight",
              "success-surfaceHighlight",
              "warning-surfaceHighlight"
            ],
            "type": "string"
          }
        ],
        "title": "backgroundColor",
        "required": false
      },
      {
        "description": "The color property is used to set the color of the popover.",
        "default": "neutral-background",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "xs"
              },
              "md": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "md"
              },
              "lg": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "enum": [
                  "danger-surfaceHighlight",
                  "neutral-background",
                  "neutral-surfaceHighlight",
                  "primary-interactiveHover",
                  "primary-surfaceHighlight",
                  "success-surfaceHighlight",
                  "warning-surfaceHighlight"
                ],
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "enum": [
              "danger-surfaceHighlight",
              "neutral-background",
              "neutral-surfaceHighlight",
              "primary-interactiveHover",
              "primary-surfaceHighlight",
              "success-surfaceHighlight",
              "warning-surfaceHighlight"
            ],
            "type": "string"
          }
        ],
        "title": "color",
        "required": false
      },
      {
        "description": "The maxWidth property specifies the maximum width of a popover's content area.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "type": "string",
                "title": "xs"
              },
              "md": {
                "type": "string",
                "title": "md"
              },
              "lg": {
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "type": "string"
          }
        ],
        "title": "maxWidth",
        "required": false
      },
      {
        "description": "The overflow shorthand property sets the desired behavior for an popover's content overflow.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "enum": [
                  "auto",
                  "hidden",
                  "scroll",
                  "visible"
                ],
                "type": "string",
                "title": "xs"
              },
              "md": {
                "enum": [
                  "auto",
                  "hidden",
                  "scroll",
                  "visible"
                ],
                "type": "string",
                "title": "md"
              },
              "lg": {
                "enum": [
                  "auto",
                  "hidden",
                  "scroll",
                  "visible"
                ],
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "enum": [
                  "auto",
                  "hidden",
                  "scroll",
                  "visible"
                ],
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "enum": [
              "auto",
              "hidden",
              "scroll",
              "visible"
            ],
            "type": "string"
          }
        ],
        "title": "overflow",
        "required": false
      },
      {
        "description": "Position of the popover.",
        "default": "bottom",
        "enum": [
          "bottom",
          "bottom-end",
          "bottom-start",
          "left",
          "left-end",
          "left-start",
          "right",
          "right-end",
          "right-start",
          "top",
          "top-end",
          "top-start"
        ],
        "type": "string",
        "title": "position",
        "required": false
      },
      {
        "description": "The zIndex property specifies the stack order of the popover.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "xs"
              },
              "md": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "md"
              },
              "lg": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "enum": [
              "100",
              "200",
              "300",
              "400",
              "500",
              "600",
              "700",
              "800",
              "900"
            ],
            "type": "string"
          }
        ],
        "title": "zIndex",
        "required": false
      },
      {
        "description": "If true, the component is shown.",
        "type": "boolean",
        "title": "visible",
        "required": false
      },
      {
        "description": "An HTML element, or a function that returns one. It's used to set the position of the popover.",
        "type": "React.ReactNode | ((data: { open: boolean, setVisibility: (visibility: boolean) => void }) => React.ReactNode);",
        "title": "children",
        "required": true
      },
      {
        "description": "Function to control popover opening and closing.",
        "type": "(visible: boolean) => void;",
        "title": "onVisibility",
        "required": false
      },
      {
        "description": "Conditional for displaying the popover arrow.",
        "default": true,
        "type": "boolean",
        "title": "arrow",
        "required": false
      },
      {
        "description": "A common feature of select dropdowns is that the dropdown matches the width of the reference regardless of its contents.",
        "default": false,
        "type": "boolean",
        "title": "matchReferenceWidth",
        "required": false
      },
      {
        "description": "Adds hover event listeners that change the open state, like CSS :hover.",
        "default": false,
        "type": "boolean",
        "title": "enabledHover",
        "required": false
      },
      {
        "description": "Adds click event listeners that change the open state.",
        "default": true,
        "type": "boolean",
        "title": "enabledClick",
        "required": false
      }
    ],
    "subComponents": []
  },
  "sideModal": {
    "id": "sideModal",
    "name": "SideModal",
    "totalProps": 15,
    "packageName": "@nimbus-ds/sidemodal",
    "version": "1.7.7",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/side-modal",
    "props": [
      {
        "description": "Title.",
        "type": "string",
        "title": "title",
        "required": false
      },
      {
        "description": "Action Title",
        "type": "React.ReactNode",
        "title": "titleAction",
        "required": false
      },
      {
        "description": "Action Header",
        "type": "React.ReactNode",
        "title": "headerAction",
        "required": false
      },
      {
        "description": "Icon Header",
        "type": "React.ReactNode",
        "title": "headerIcon",
        "required": false
      },
      {
        "description": "Body Content",
        "type": "React.ReactNode",
        "title": "children",
        "required": false
      },
      {
        "description": "Header padding.",
        "enum": [
          "base",
          "none"
        ],
        "type": "string",
        "title": "paddingHeader",
        "required": false
      },
      {
        "description": "Body padding.",
        "enum": [
          "base",
          "none"
        ],
        "type": "string",
        "title": "paddingBody",
        "required": false
      },
      {
        "description": "Footer padding.",
        "enum": [
          "base",
          "none"
        ],
        "type": "string",
        "title": "paddingFooter",
        "required": false
      },
      {
        "description": "Footer element actions.",
        "type": "object",
        "properties": {
          "primaryAction": {
            "type": "object",
            "properties": {
              "children": {
                "description": "The content of the button.",
                "type": "React.ReactNode",
                "title": "children"
              },
              "appearance": {
                "description": "Change the visual style of the button.",
                "default": "neutral",
                "enum": [
                  "danger",
                  "neutral",
                  "primary",
                  "transparent"
                ],
                "type": "string",
                "title": "appearance"
              },
              "disabled": {
                "description": "Disables the button, disallowing user interaction.",
                "default": false,
                "type": "boolean",
                "title": "disabled"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "children",
              "appearance",
              "disabled"
            ],
            "required": [
              "children"
            ],
            "title": "primaryAction"
          },
          "secondaryAction": {
            "type": "object",
            "properties": {
              "children": {
                "description": "The content of the button.",
                "type": "React.ReactNode",
                "title": "children"
              },
              "appearance": {
                "description": "Change the visual style of the button.",
                "default": "neutral",
                "enum": [
                  "danger",
                  "neutral",
                  "primary",
                  "transparent"
                ],
                "type": "string",
                "title": "appearance"
              },
              "disabled": {
                "description": "Disables the button, disallowing user interaction.",
                "default": false,
                "type": "boolean",
                "title": "disabled"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "children",
              "appearance",
              "disabled"
            ],
            "required": [
              "children"
            ],
            "title": "secondaryAction"
          }
        },
        "additionalProperties": false,
        "propertyOrder": [
          "primaryAction",
          "secondaryAction"
        ],
        "required": false,
        "title": "footer"
      },
      {
        "description": "Determines if the sidebar is shown or not.",
        "default": true,
        "type": "boolean",
        "title": "open",
        "required": false
      },
      {
        "description": "The maxWidth property specifies the maxWidth of a sidebar's content area.",
        "default": "375px",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "type": "string",
                "title": "xs"
              },
              "md": {
                "type": "string",
                "title": "md"
              },
              "lg": {
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "type": "string"
          }
        ],
        "title": "maxWidth",
        "required": false
      },
      {
        "description": "The padding properties are used to generate space around an sidebar's content area.",
        "default": "base",
        "enum": [
          "base",
          "none",
          "small"
        ],
        "type": "string",
        "title": "padding",
        "required": false
      },
      {
        "description": "Side from which the sidebar will appear.",
        "default": "right",
        "enum": [
          "left",
          "right"
        ],
        "type": "string",
        "title": "position",
        "required": false
      },
      {
        "description": "The zIndex property specifies the stack order of the sidebar.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "xs": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "xs"
              },
              "md": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "md"
              },
              "lg": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "lg"
              },
              "xl": {
                "enum": [
                  "100",
                  "200",
                  "300",
                  "400",
                  "500",
                  "600",
                  "700",
                  "800",
                  "900"
                ],
                "type": "string",
                "title": "xl"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "xs",
              "md",
              "lg",
              "xl"
            ]
          },
          {
            "enum": [
              "100",
              "200",
              "300",
              "400",
              "500",
              "600",
              "700",
              "800",
              "900"
            ],
            "type": "string"
          }
        ],
        "title": "zIndex",
        "required": false
      },
      {
        "description": "Callback fired when the component requests to be closed.\n() => void;",
        "type": "object",
        "additionalProperties": false,
        "propertyOrder": [],
        "title": "onRemove",
        "required": false
      }
    ],
    "subComponents": []
  },
  "sortable": {
    "id": "sortable",
    "name": "Sortable",
    "totalProps": 12,
    "packageName": "@nimbus-ds/sortable",
    "version": "1.0.0",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/sortable",
    "props": [
      {
        "$ref": "#/definitions/React.ReactNode",
        "description": "The children components",
        "title": "children",
        "required": false
      },
      {
        "description": "Whether to disable sorting functionality",
        "type": "boolean",
        "title": "disabled",
        "required": false
      },
      {
        "description": "The items to be sorted",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Unique identifier for the sortable item",
              "type": [
                "string",
                "number"
              ],
              "title": "id"
            }
          },
          "additionalProperties": false,
          "propertyOrder": [
            "id"
          ],
          "required": [
            "id"
          ]
        },
        "title": "items",
        "required": true
      },
      {
        "description": "Callback fired when items are reordered",
        "type": "object",
        "additionalProperties": false,
        "propertyOrder": [],
        "title": "onReorder",
        "required": true
      },
      {
        "description": "Callback fired when drag starts",
        "type": "object",
        "additionalProperties": false,
        "propertyOrder": [],
        "title": "onDragStart",
        "required": false
      },
      {
        "description": "Callback fired during drag",
        "type": "object",
        "additionalProperties": false,
        "propertyOrder": [],
        "title": "onDragOver",
        "required": false
      },
      {
        "description": "Callback fired when drag ends",
        "type": "object",
        "additionalProperties": false,
        "propertyOrder": [],
        "title": "onDragEnd",
        "required": false
      },
      {
        "description": "The orientation of the sortable list",
        "enum": [
          "horizontal",
          "vertical"
        ],
        "type": "string",
        "title": "orientation",
        "required": false
      },
      {
        "description": "Custom sensor options for drag detection",
        "type": "object",
        "properties": {
          "activationConstraint": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "distance": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          },
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x",
                          "y"
                        ],
                        "required": [
                          "x",
                          "y"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x"
                        ],
                        "required": [
                          "x"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "y"
                        ],
                        "required": [
                          "y"
                        ]
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "title": "distance"
                  },
                  "tolerance": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          },
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x",
                          "y"
                        ],
                        "required": [
                          "x",
                          "y"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x"
                        ],
                        "required": [
                          "x"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "y"
                        ],
                        "required": [
                          "y"
                        ]
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "title": "tolerance"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "distance",
                  "tolerance"
                ],
                "required": [
                  "distance"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "delay": {
                    "type": "number",
                    "title": "delay"
                  },
                  "tolerance": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          },
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x",
                          "y"
                        ],
                        "required": [
                          "x",
                          "y"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x"
                        ],
                        "required": [
                          "x"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "y"
                        ],
                        "required": [
                          "y"
                        ]
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "title": "tolerance"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "delay",
                  "tolerance"
                ],
                "required": [
                  "delay",
                  "tolerance"
                ]
              },
              {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "delay": {
                    "type": "number",
                    "title": "delay"
                  },
                  "tolerance": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          },
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x",
                          "y"
                        ],
                        "required": [
                          "x",
                          "y"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x"
                        ],
                        "required": [
                          "x"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "y"
                        ],
                        "required": [
                          "y"
                        ]
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "title": "tolerance"
                  },
                  "distance": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          },
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x",
                          "y"
                        ],
                        "required": [
                          "x",
                          "y"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "number",
                            "title": "x"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x"
                        ],
                        "required": [
                          "x"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "y": {
                            "type": "number",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "y"
                        ],
                        "required": [
                          "y"
                        ]
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "title": "distance"
                  }
                },
                "required": [
                  "delay",
                  "distance",
                  "tolerance"
                ]
              }
            ],
            "title": "activationConstraint"
          }
        },
        "additionalProperties": false,
        "propertyOrder": [
          "activationConstraint",
          "bypassActivationConstraint",
          "onActivation"
        ],
        "title": "sensorOptions",
        "required": false
      },
      {
        "description": "Configuration for the drag overlay appearance and behavior",
        "type": "object",
        "properties": {
          "transition": {
            "anyOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "propertyOrder": []
              },
              {
                "type": "string"
              }
            ],
            "title": "transition"
          },
          "zIndex": {
            "type": "number",
            "title": "zIndex"
          },
          "className": {
            "type": "string",
            "title": "className"
          },
          "children": {
            "$ref": "#/definitions/React.ReactNode",
            "title": "children"
          },
          "modifiers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "propertyOrder": []
            },
            "title": "modifiers"
          },
          "adjustScale": {
            "type": "boolean",
            "title": "adjustScale"
          },
          "dropAnimation": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "keyframes": {
                    "type": "object",
                    "additionalProperties": false,
                    "propertyOrder": [],
                    "title": "keyframes"
                  },
                  "duration": {
                    "type": "number",
                    "title": "duration"
                  },
                  "easing": {
                    "type": "string",
                    "title": "easing"
                  },
                  "sideEffects": {
                    "anyOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "propertyOrder": []
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "sideEffects"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "keyframes",
                  "duration",
                  "easing",
                  "sideEffects"
                ]
              },
              {
                "type": "object",
                "additionalProperties": false,
                "propertyOrder": []
              },
              {
                "type": "null"
              }
            ],
            "title": "dropAnimation"
          }
        },
        "additionalProperties": false,
        "propertyOrder": [
          "transition",
          "zIndex",
          "className",
          "children",
          "modifiers",
          "adjustScale",
          "dropAnimation"
        ],
        "title": "overlaySettings",
        "required": false
      },
      {
        "description": "Settings for the DndContext",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "modifiers": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "propertyOrder": []
            },
            "title": "modifiers"
          },
          "onDragAbort": {
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "onDragAbort"
          },
          "onDragPending": {
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "onDragPending"
          },
          "onDragMove": {
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "onDragMove"
          },
          "onDragCancel": {
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "onDragCancel"
          },
          "autoScroll": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "acceleration": {
                    "type": "number",
                    "title": "acceleration"
                  },
                  "activator": {
                    "enum": [
                      0,
                      1
                    ],
                    "type": "number",
                    "title": "activator"
                  },
                  "canScroll": {
                    "type": "object",
                    "additionalProperties": false,
                    "propertyOrder": [],
                    "title": "canScroll"
                  },
                  "enabled": {
                    "type": "boolean",
                    "title": "enabled"
                  },
                  "interval": {
                    "type": "number",
                    "title": "interval"
                  },
                  "layoutShiftCompensation": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "x": {
                            "type": "boolean",
                            "title": "x"
                          },
                          "y": {
                            "type": "boolean",
                            "title": "y"
                          }
                        },
                        "additionalProperties": false,
                        "propertyOrder": [
                          "x",
                          "y"
                        ],
                        "required": [
                          "x",
                          "y"
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ],
                    "title": "layoutShiftCompensation"
                  },
                  "order": {
                    "enum": [
                      0,
                      1
                    ],
                    "type": "number",
                    "title": "order"
                  },
                  "threshold": {
                    "type": "object",
                    "properties": {
                      "x": {
                        "type": "number",
                        "title": "x"
                      },
                      "y": {
                        "type": "number",
                        "title": "y"
                      }
                    },
                    "additionalProperties": false,
                    "propertyOrder": [
                      "x",
                      "y"
                    ],
                    "required": [
                      "x",
                      "y"
                    ],
                    "title": "threshold"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "acceleration",
                  "activator",
                  "canScroll",
                  "enabled",
                  "interval",
                  "layoutShiftCompensation",
                  "order",
                  "threshold"
                ]
              },
              {
                "type": "boolean"
              }
            ],
            "title": "autoScroll"
          },
          "cancelDrop": {
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "cancelDrop"
          },
          "measuring": {
            "type": "object",
            "properties": {
              "draggable": {
                "type": "object",
                "properties": {
                  "measure": {
                    "type": "object",
                    "additionalProperties": false,
                    "propertyOrder": [],
                    "title": "measure"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "measure"
                ],
                "title": "draggable"
              },
              "droppable": {
                "type": "object",
                "properties": {
                  "measure": {
                    "type": "object",
                    "additionalProperties": false,
                    "propertyOrder": [],
                    "title": "measure"
                  },
                  "strategy": {
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "type": "number",
                    "title": "strategy"
                  },
                  "frequency": {
                    "anyOf": [
                      {
                        "enum": [
                          "optimized"
                        ],
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "title": "frequency"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "measure",
                  "strategy",
                  "frequency"
                ],
                "title": "droppable"
              },
              "dragOverlay": {
                "type": "object",
                "properties": {
                  "measure": {
                    "type": "object",
                    "additionalProperties": false,
                    "propertyOrder": [],
                    "title": "measure"
                  }
                },
                "additionalProperties": false,
                "propertyOrder": [
                  "measure"
                ],
                "title": "dragOverlay"
              }
            },
            "additionalProperties": false,
            "propertyOrder": [
              "draggable",
              "droppable",
              "dragOverlay"
            ],
            "title": "measuring"
          }
        },
        "additionalProperties": false,
        "propertyOrder": [
          "id",
          "modifiers",
          "onDragAbort",
          "onDragPending",
          "onDragMove",
          "onDragCancel",
          "autoScroll",
          "cancelDrop",
          "measuring"
        ],
        "title": "dndContextSettings",
        "required": false
      },
      {
        "description": "Render function for the dragged item overlay",
        "type": "object",
        "additionalProperties": false,
        "propertyOrder": [],
        "title": "renderOverlay",
        "required": false
      }
    ],
    "subComponents": [
      {
        "name": "Sortable.Item",
        "totalProps": 5,
        "props": [
          {
            "description": "The unique identifier for the item",
            "type": [
              "string",
              "number"
            ],
            "title": "id",
            "required": true
          },
          {
            "description": "Whether the item is disabled from being dragged",
            "type": "boolean",
            "title": "disabled",
            "required": false
          },
          {
            "description": "Custom drag handle selector",
            "type": "boolean",
            "title": "handle",
            "required": false
          },
          {
            "$ref": "#/definitions/React.ReactNode",
            "description": "The children components",
            "title": "children",
            "required": false
          },
          {
            "description": "Optional render function that receives drag state and handlers, useful for fully customizing the item",
            "type": "object",
            "additionalProperties": false,
            "propertyOrder": [],
            "title": "renderItem",
            "required": false
          }
        ]
      },
      {
        "name": "Sortable.ItemHandle",
        "totalProps": 1,
        "props": [
          {
            "$ref": "#/definitions/React.ReactNode",
            "description": "The content of the SortableItemHandle component",
            "title": "children",
            "required": false
          }
        ]
      }
    ]
  },
  "thumbnailWithAction": {
    "id": "thumbnailWithAction",
    "name": "ThumbnailWithAction",
    "totalProps": 3,
    "packageName": "@nimbus-ds/thumbnail-with-action",
    "version": "1.2.5",
    "docLink": "https://nimbus.nuvemshop.com.br/documentation/components-components/thumbnail-with-action",
    "props": [
      {
        "description": "Thumbnail component properties.",
        "type": "object",
        "properties": {
          "alt": {
            "description": "The required alt attribute specifies an alternate text for an image, if the image cannot be displayed.",
            "type": "string",
            "title": "alt"
          },
          "children": {
            "description": "The content of the thumbnail.",
            "type": "React.ReactNode",
            "title": "children"
          },
          "aspectRatio": {
            "description": "Permitted aspect ratios for the size of the thumbnail image.",
            "default": "1/1",
            "enum": [
              "1/1",
              "1/2",
              "16/9",
              "2/1",
              "3/4",
              "4/3",
              "9/16"
            ],
            "type": "string",
            "title": "aspectRatio"
          },
          "width": {
            "description": "Width value of the thumbnail image. Defaults to 100%.",
            "default": "100%",
            "type": "string",
            "title": "width"
          }
        },
        "additionalProperties": false,
        "propertyOrder": [
          "alt",
          "children",
          "aspectRatio",
          "width"
        ],
        "required": true,
        "title": "thumbnail"
      },
      {
        "description": "Element to be rendered inside the Thumbnail.",
        "type": "React.ReactNode",
        "title": "children",
        "required": true
      },
      {
        "description": "Optional position of the element.",
        "enum": [
          "bottom-left",
          "bottom-right",
          "top-left",
          "top-right"
        ],
        "type": "string",
        "title": "contentPosition",
        "required": false
      }
    ],
    "subComponents": []
  }
}